<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:14             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers; use App\Logs; use Exception; use Throwable; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Http\JsonResponse; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Crypt; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Storage; use App\Http\Controllers\Controller; use App\Http\Requests\Register\StoreFormRegisterRequest; class FormRegisterController extends Controller { public function __construct() { $this->middleware("\147\165\145\163\164"); } public function index(Request $request) { goto JxEqr; CACSs: $encryptedContents = Storage::get($filePath); goto rFlGr; rFlGr: $decryptedContents = Crypt::decrypt($encryptedContents); goto I0dA1; I0dA1: return response()->make($decryptedContents, 200, ["\103\157\156\x74\x65\x6e\164\55\x54\171\160\x65" => "\141\160\160\154\x69\143\141\164\151\x6f\156\x2f\x70\x64\146", "\x43\x6f\156\x74\145\x6e\x74\55\104\x69\163\160\157\x73\151\x74\151\x6f\156" => "\151\x6e\x6c\x69\156\145\x3b\40\146\151\x6c\x65\156\x61\155\145\x3d\x22\x64\x65\143\x72\171\160\x74\x65\144\55\146\x69\154\x65\x2e\160\144\146\x22"]); goto ZYT3C; JxEqr: $filePath = "\160\165\x62\x6c\151\x63\x2f\154\x6f\x67\157\x2f\145\156\x63\162\171\160\164\56\x67\156\163"; goto CACSs; ZYT3C: } public function store(StoreFormRegisterRequest $request) : JsonResponse { goto Xdjb4; ag156: try { goto kT4MF; Uz9Lr: ak_3m: goto C1xaU; X3bj9: try { goto zosSm; t50eb: $extension = $request->file("\146\151\x6c\145")->getClientOriginalExtension(); goto CvC1r; HGjjI: $request->file("\x66\151\154\145")->storeAs("\57\x70\x75\142\154\151\x63\57\x6c\x6f\147\157", $banner_name); goto s7ive; zosSm: $banner_file = $request->file("\x66\151\x6c\x65")->getClientOriginalName(); goto t50eb; s7ive: $validated["\x66\151\154\x65"] = "\x2f\x73\x74\x6f\162\x61\x67\x65\x2f\x6c\157\147\x6f\x2f" . $banner_name; goto Dh8BD; CvC1r: $banner_name = now("\x41\x73\151\x61\x2f\x4a\141\x6b\141\x72\x74\x61")->format("\x59\x6d\x64\x48\x69\x73") . "\55" . rand(100000, 999999) . "\55" . $banner_file; goto HGjjI; Dh8BD: } catch (Throwable $th) { $logs->write("\105\x52\x52\x4f\x52", $th->getMessage()); } goto S1pNF; HkIKV: goto zWZWc; goto e_UsF; e_UsF: NihPS: goto QM19H; Idz3r: $logs->write("\123\x51\114", $queries[$q]["\161\x75\145\x72\171"]); goto ychT2; igQ53: $header_id = Str::uuid(); goto O7u8y; oqLht: if (!$request->hasFile("\146\x69\154\145")) { goto F2G28; } goto X3bj9; qjUpa: $result["\x6d\x65\163\163\141\x67\145"] = "\x53\x75\x63\x63\145\x73\163\146\x75\x6c\154\x79\x20\x63\162\x65\141\164\145\x64\56"; goto EFzTD; ET3LD: $q++; goto HkIKV; EFzTD: r247T: goto dYdi7; qwGxR: bdJ86: goto uE3E1; V7xC3: dOAmP: goto wCMPL; dYdi7: $queries = DB::getQueryLog(); goto WXKxe; lS2vf: foreach ($data_kategori as $i => $value) { $kategori = DB::table("\x74\163\165\x70\160\154\151\145\162\x5f\142\157\x6f\x6b\137\143\x61\164\145\x67\x6f\162\x79")->updateOrInsert(["\163\x69\x64" => $header_id, "\143\141\x74\145\x67\157\162\171" => $value->id], ["\143\x72\145\x61\x74\145\144\137\141\164" => Carbon::now("\x41\x73\x69\x61\57\112\x61\x6b\x61\162\x74\141"), "\x63\162\x65\141\164\x65\x64\x5f\142\171" => $data->email_perusahaan, "\x75\x70\144\141\164\x65\x64\x5f\141\164" => Carbon::now("\x41\x73\151\141\57\112\141\x6b\x61\162\164\x61"), "\x75\x70\144\x61\164\x65\144\x5f\x62\171" => $data->email_perusahaan]); mP24v: } goto qwGxR; dflxf: $result["\163\x74\x61\x74\x75\x73"] = 201; goto qjUpa; C1xaU: $data_kategori = json_decode($data->kategori); goto lS2vf; k0aSF: NoseH: goto BB4uN; BB4uN: if (!$created) { goto r247T; } goto woqJB; ychT2: fyCTo: goto ET3LD; wCMPL: $data_kuasa = json_decode($data->kuasa); goto ky5JM; gUEmk: zWZWc: goto AVObz; AVObz: if (!($q < count($queries))) { goto NihPS; } goto BXYaz; BXYaz: $logs->write("\x42\x49\116\x44\111\x4e\x47", "\133" . implode("\x2c\40", $queries[$q]["\x62\151\x6e\x64\x69\156\147\x73"]) . "\x5d"); goto Idz3r; bjsI6: $data->type = (bool) $data->supplier && (bool) $data->distributor ? 3 : ((bool) $data->distributor ? 2 : 1); goto igQ53; Eu3Xw: foreach ($data_rekening as $i => $value) { $kuasa = DB::table("\x74\x72\145\x6b\145\156\x69\156\x67\137\142\141\x6e\x6b")->updateOrInsert(["\x73\151\x64" => $header_id, "\151\144" => Str::uuid()], ["\x6e\160\x77\x70" => $value->npwp ?? '', "\156\x6f\162\x65\153" => $value->norek ?? '', "\142\x61\x6e\153" => $value->bank ?? '', "\156\x61\x6d\141" => $value->nama ?? '', "\x6b\x6f\x74\x61" => $value->kota ?? '', "\143\162\x65\x61\x74\x65\144\x5f\x61\x74" => Carbon::now("\x41\163\x69\x61\x2f\x4a\141\153\x61\162\x74\x61"), "\x63\x72\145\x61\164\145\144\137\142\x79" => $data->email_perusahaan, "\x75\x70\144\141\164\145\x64\137\x61\164" => Carbon::now("\x41\163\151\x61\x2f\112\x61\x6b\141\162\164\x61"), "\x75\160\144\141\164\145\144\137\x62\x79" => $data->email_perusahaan]); M_yv1: } goto k0aSF; q8V3R: foreach ($data_imprint as $i => $value) { $imprint = DB::table("\164\x73\x75\160\160\x6c\151\x65\162\x5f\x69\x6d\x70\x72\151\156\164")->updateOrInsert(["\163\x69\x64" => $header_id, "\151\x64" => Str::uuid()], ["\x6e\141\x6d\145" => $value->nama, "\x63\162\x65\141\164\145\144\x5f\x61\x74" => Carbon::now("\x41\163\x69\141\57\112\141\153\141\x72\x74\141"), "\x63\x72\x65\x61\164\x65\144\137\142\171" => $data->email_perusahaan, "\165\x70\144\141\164\145\x64\x5f\x61\x74" => Carbon::now("\x41\x73\x69\141\57\112\x61\153\141\162\164\141"), "\x75\x70\x64\141\x74\145\x64\x5f\142\x79" => $data->email_perusahaan]); UHHvU: } goto V7xC3; kT4MF: DB::enableQueryLog(); goto oqLht; uE3E1: $data_rekening = json_decode($data->rekening); goto Eu3Xw; WXKxe: $q = 0; goto gUEmk; ky5JM: foreach ($data_kuasa as $i => $value) { $kuasa = DB::table("\164\x73\165\160\x70\154\151\x65\162\x5f\x6b\165\x61\x73\x61")->updateOrInsert(["\163\151\x64" => $header_id, "\x69\144" => Str::uuid()], ["\156\141\x6d\x65" => $value->nama, "\143\x72\145\x61\164\145\x64\137\x61\x74" => Carbon::now("\101\x73\151\x61\x2f\x4a\x61\153\x61\162\x74\x61"), "\143\162\x65\141\x74\145\x64\137\x62\x79" => $data->email_perusahaan, "\165\x70\144\141\164\x65\x64\137\141\164" => Carbon::now("\101\163\x69\x61\x2f\x4a\141\x6b\141\x72\164\141"), "\x75\x70\144\x61\x74\145\x64\137\142\171" => $data->email_perusahaan]); RVXYZ: } goto Uz9Lr; v9w2_: $data = (object) $validated; goto bjsI6; KAfU8: $data_imprint = json_decode($data->imprint); goto q8V3R; O7u8y: $created = DB::table("\x74\163\x75\x70\x70\x6c\151\x65\x72\x5f\x64\151\x73\164\x72\x69\142\165\x74\157\162")->updateOrInsert(["\151\x64" => $header_id], ["\164\x79\x70\145" => $data->type ?? '', "\156\x61\155\x61\137\160\145\x72\165\163\x61\150\x61\x61\x6e" => $data->nama_perusahaan ?? '', "\x65\155\141\151\x6c\x5f\160\x65\162\x75\x73\141\x68\141\141\156" => $data->email_perusahaan ?? '', "\160\141\x73\163\x77\x6f\162\x64" => $data->password ?? '', "\x70\141\163\x73\x77\x6f\162\144\137\x63\157\x6e\146\151\162\155\141\164\x69\157\156" => $data->password_confirmation ?? '', "\156\145\x67\141\162\x61" => $data->negara ?? '', "\x70\x72\157\166\151\x6e\163\151" => $data->provinsi ?? '', "\x6b\x61\x62\x75\x70\x61\x74\145\156" => $data->kabupaten ?? '', "\x6b\145\x63\141\155\141\x74\x61\156" => $data->kecamatan ?? '', "\153\145\x6c\165\x61\x72\141\150\141\156" => $data->keluarahan ?? '', "\x6b\x6f\x64\x65\137\x70\157\x73" => $data->kode_pos ?? '', "\141\x6c\x61\155\141\x74" => $data->alamat ?? '', "\x74\145\x6c\145\x70\157\x6e" => $data->telepon ?? '', "\x68\141\x6e\x64\x70\x68\x6f\156\x65" => $data->handphone ?? '', "\160\x69\x6d\x70\x69\156\x61\156" => $data->pimpinan ?? '', "\x6a\x61\142\x61\x74\x61\156" => $data->jabatan ?? '', "\150\x70\x69\x6d\x70\151\x6e\x61\156" => $data->hpimpinan ?? '', "\160\x69\143" => $data->pic ?? '', "\150\160\151\x63" => $data->hpic ?? '', "\146\151\154\x65" => $data->file ?? '', "\143\x72\145\141\164\145\144\137\141\x74" => Carbon::now("\x41\x73\x69\x61\x2f\112\x61\153\141\162\x74\x61"), "\x63\x72\x65\141\x74\145\144\137\142\171" => $data->email_perusahaan ?? '', "\x75\x70\x64\x61\164\x65\x64\x5f\141\x74" => Carbon::now("\101\x73\151\141\x2f\112\141\153\141\162\164\141"), "\165\x70\x64\x61\164\x65\144\137\x62\171" => $data->email_perusahaan ?? '']); goto KAfU8; woqJB: $logs->write("\111\116\106\117", "\123\x75\143\x63\x65\x73\x73\x66\165\x6c\x6c\171\x20\143\162\145\x61\164\145\144"); goto dflxf; S1pNF: F2G28: goto v9w2_; QM19H: } catch (Throwable $th) { $logs->write("\105\122\122\x4f\x52", $th->getMessage()); $result["\x6d\x65\163\x73\x61\147\145"] = "\x46\x61\x69\154\x65\144\x20\x63\162\x65\x61\164\x65\x64\56\x3c\142\x72\x3e" . $th->getMessage(); } goto KSIhS; X4GZ0: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\114\x6f\x67"); goto vT0bG; Xb7kB: return response()->json($result["\155\145\x73\163\x61\147\x65"], $result["\x73\x74\x61\x74\x75\x73"]); goto YGew4; IDDLJ: $result["\155\145\163\x73\x61\x67\145"] = ''; goto ag156; Za8bH: $result["\x73\164\141\164\165\x73"] = 200; goto IDDLJ; vT0bG: $logs->write(__FUNCTION__, "\x53\x54\x41\x52\124"); goto Za8bH; KSIhS: $logs->write(__FUNCTION__, "\123\x54\117\120\xd\xa"); goto Xb7kB; Xdjb4: $validated = $request->validated(); goto X4GZ0; YGew4: } public function show(string $id) : JsonResponse { goto FmsoN; E0FjQ: qeeJq: goto PbYt_; PbYt_: okl39: goto eQSbG; X2cdO: switch (request()->param) { case "\x70\162\157\166\x69\156\163\x69\x2d\155\x73\164": goto XauKM; r2y2x: $logs->write("\102\x49\116\x44\111\116\x47", "\133" . implode("\54\40", $queries[$q]["\142\x69\x6e\x64\x69\156\147\163"]) . "\135"); goto MyF_J; MyF_J: $logs->write("\123\x51\114", $sql); goto nEyRE; aH9kG: $results = []; goto vg8Ey; R9TIO: goto wxWCf; goto EEQr3; Ll8nd: $q++; goto R9TIO; XauKM: DB::enableQueryLog(); goto AKiNP; mioCr: wxWCf: goto jlw5k; tJn7f: goto okl39; goto SFjwj; XQH9r: $results = $provinsi->map(function ($value, $key) { return ["\151\144" => $value->id, "\x6e\141\155\x65" => $value->name]; }); goto M1Zb1; nEyRE: zWZeo: goto Ll8nd; mhgJ5: $queries = DB::getQueryLog(); goto GDL0U; EEQr3: K1yEH: goto aH9kG; GDL0U: $q = 0; goto mioCr; jREUP: $sql = Str::replaceArray("\77", $queries[$q]["\x62\151\x6e\144\151\156\x67\163"], str_replace("\77", "\47\77\x27", $queries[$q]["\x71\x75\x65\x72\x79"])); goto r2y2x; jlw5k: if (!($q < count($queries))) { goto K1yEH; } goto jREUP; cdDYG: return response()->json($results, 200); goto tJn7f; AKiNP: $provinsi = DB::table("\164\160\x72\157\x76\x69\156\x73\x69\40\x61\163\x20\x61")->sharedLock()->select("\141\56\x70\x72\x6f\166\x69\156\163\x69\x5f\151\x64\40\141\163\40\151\144", "\x61\56\x70\x72\x6f\x76\x69\x6e\x73\x69\137\x6e\x61\155\145\x20\x61\163\x20\156\141\x6d\145")->get(); goto mhgJ5; M1Zb1: WhUPB: goto cdDYG; vg8Ey: if (!$provinsi) { goto WhUPB; } goto XQH9r; SFjwj: case "\x6b\x61\142\165\160\x61\x74\x65\x6e\55\155\x73\164": goto Z60SM; eMa74: $q = 0; goto i6Ogq; Qv18I: cYWXI: goto IUpAi; IUpAi: return response()->json($results, 200); goto N0fNO; tpU52: if (!$kabupaten) { goto cYWXI; } goto OcKgy; o_jgy: $results = []; goto tpU52; b2rIa: $logs->write("\123\121\x4c", $sql); goto J8R98; mI78w: $kabupaten = DB::table("\164\153\x61\x62\165\x70\x61\164\145\x6e\x20\141\163\40\141")->sharedLock()->select("\x61\x2e\153\x61\142\165\160\141\x74\x65\x6e\x5f\151\x64\x20\141\x73\40\x69\x64", "\x61\56\x6b\x61\x62\165\160\141\x74\145\156\x5f\x6e\141\155\x65\40\141\163\x20\156\141\155\145")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\141\56\160\x72\x6f\166\x69\x6e\163\x69\137\151\144", $provinsi); })->get(); goto PjSHk; xuY1y: $provinsi = request()->provinsi ?? ''; goto mI78w; N0fNO: goto okl39; goto YrFNE; vZW3q: if (!($q < count($queries))) { goto Jo6Ns; } goto rc4D3; HBBXx: goto yDOeL; goto SzPaW; i6Ogq: yDOeL: goto vZW3q; Z60SM: DB::enableQueryLog(); goto xuY1y; SzPaW: Jo6Ns: goto o_jgy; pKha3: $logs->write("\x42\x49\116\104\x49\x4e\107", "\133" . implode("\x2c\x20", $queries[$q]["\x62\151\156\144\x69\156\x67\163"]) . "\135"); goto b2rIa; rc4D3: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\x6e\x64\x69\x6e\x67\x73"], str_replace("\x3f", "\47\77\47", $queries[$q]["\161\165\x65\162\171"])); goto pKha3; OcKgy: $results = $kabupaten->map(function ($value, $key) { return ["\x69\144" => $value->id, "\x6e\141\155\x65" => $value->name]; }); goto Qv18I; AhyYU: $q++; goto HBBXx; PjSHk: $queries = DB::getQueryLog(); goto eMa74; J8R98: gThzw: goto AhyYU; YrFNE: case "\x6b\145\x63\x61\x6d\141\x74\x61\156\55\155\163\x74": goto GiE6A; icOG7: goto xQLWv; goto Dl8ev; UU1uj: $provinsi = request()->provinsi ?? ''; goto PDmA4; vDFlu: JUtn4: goto pM10w; GiE6A: DB::enableQueryLog(); goto UU1uj; pM10w: $q++; goto icOG7; QnwCE: if (!($q < count($queries))) { goto LFfdd; } goto EtRBH; mZOAI: $logs->write("\102\x49\x4e\104\x49\x4e\107", "\133" . implode("\x2c\40", $queries[$q]["\x62\x69\x6e\144\151\156\x67\x73"]) . "\x5d"); goto HXC0c; S8Uxb: $q = 0; goto R55wS; PDmA4: $kabupaten = request()->kabupaten ?? ''; goto Af2s2; zHzw_: g0WcH: goto Je9nS; yEqzu: $results = []; goto bQM2O; bQM2O: if (!$kecamatan) { goto g0WcH; } goto HQrKh; R55wS: xQLWv: goto QnwCE; Af2s2: $kecamatan = DB::table("\164\x6b\x65\x63\x61\155\x61\164\x61\156\40\141\163\x20\x61")->sharedLock()->select("\141\56\x6b\x65\x63\141\x6d\141\164\x61\156\x5f\x69\x64\40\x61\163\x20\x69\144", "\141\56\153\145\x63\141\155\141\164\141\x6e\137\x6e\x61\155\x65\40\141\163\40\156\x61\155\145")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\141\x2e\160\x72\x6f\x76\x69\156\163\x69\137\151\144", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\141\x2e\x6b\x61\142\x75\x70\x61\164\x65\x6e\x5f\151\x64", $kabupaten); })->get(); goto CJuBC; Je9nS: return response()->json($results, 200); goto oeOw5; Dl8ev: LFfdd: goto yEqzu; HQrKh: $results = $kecamatan->map(function ($value, $key) { return ["\x69\144" => $value->id, "\156\x61\x6d\145" => $value->name]; }); goto zHzw_; CJuBC: $queries = DB::getQueryLog(); goto S8Uxb; EtRBH: $sql = Str::replaceArray("\77", $queries[$q]["\x62\x69\156\x64\151\156\x67\x73"], str_replace("\x3f", "\47\77\47", $queries[$q]["\x71\165\145\162\x79"])); goto mZOAI; HXC0c: $logs->write("\x53\121\114", $sql); goto vDFlu; oeOw5: goto okl39; goto OJLnu; OJLnu: case "\x6b\x65\x6c\165\162\141\150\x61\156\x2d\155\163\164": goto TdHST; oDUug: return response()->json($results, 200); goto q5M5U; XzNTk: $q++; goto yYvrA; yYvrA: goto M9b4J; goto u2PZe; K3F6P: beU9B: goto XzNTk; Od9mj: M9b4J: goto DlKYP; yq6cV: $logs->write("\x42\x49\x4e\x44\x49\116\107", "\x5b" . implode("\54\x20", $queries[$q]["\x62\151\x6e\x64\151\x6e\x67\x73"]) . "\x5d"); goto UUekp; MLDQj: $kelurahan = DB::table("\x74\153\x65\154\165\162\x61\x68\x61\156\x20\x61\x73\40\141")->sharedLock()->select("\x61\x2e\153\x65\x6c\165\x72\x61\x68\141\156\137\151\x64\x20\x61\163\x20\x69\144", "\141\x2e\153\x65\154\165\x72\141\150\141\x6e\137\156\141\x6d\x65\x20\141\x73\40\156\x61\155\x65")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\56\160\x72\157\166\151\156\x73\151\137\x69\x64", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\x61\x2e\153\x61\142\165\x70\x61\164\x65\x6e\137\151\144", $kabupaten); })->when(isset($kecamatan) && $kecamatan != '', function ($query) use($kecamatan) { $query->where("\141\x2e\x6b\145\143\141\x6d\141\164\141\156\x5f\151\144", $kecamatan); })->get(); goto wXYuc; DlKYP: if (!($q < count($queries))) { goto Jciqv; } goto nYwXd; YGLh1: $kecamatan = request()->kecamatan ?? ''; goto MLDQj; xNtop: $provinsi = request()->provinsi ?? ''; goto eA37B; eA37B: $kabupaten = request()->kabupaten ?? ''; goto YGLh1; UUekp: $logs->write("\123\x51\x4c", $sql); goto K3F6P; FwTR4: $results = $kelurahan->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\x6e\x61\x6d\x65" => $value->name]; }); goto VHuNo; PNvxo: $q = 0; goto Od9mj; nYwXd: $sql = Str::replaceArray("\77", $queries[$q]["\x62\151\x6e\x64\151\156\x67\163"], str_replace("\x3f", "\x27\x3f\47", $queries[$q]["\161\x75\145\x72\171"])); goto yq6cV; u2PZe: Jciqv: goto t2fLm; VHuNo: PTHKO: goto oDUug; q5M5U: goto okl39; goto FN6o0; wXYuc: $queries = DB::getQueryLog(); goto PNvxo; Wb5p0: if (!$kelurahan) { goto PTHKO; } goto FwTR4; TdHST: DB::enableQueryLog(); goto xNtop; t2fLm: $results = []; goto Wb5p0; FN6o0: case "\153\141\x74\x65\147\157\162\x69\x2d\x6d\163\164": goto koGVM; DIMn4: $ketegori = DB::table("\x74\142\x6f\157\153\137\x63\141\164\145\147\x6f\x72\171\40\x61\x73\x20\141")->sharedLock()->select("\141\x2e\151\x64\40\141\163\x20\x69\x64", "\141\x2e\x64\145\163\143\x72\151\x70\x74\x69\x6f\x6e\x20\x61\163\40\156\x61\155\x65")->get(); goto cYHHG; vmfmM: $sql = Str::replaceArray("\77", $queries[$q]["\142\151\x6e\x64\x69\156\x67\163"], str_replace("\77", "\47\x3f\47", $queries[$q]["\x71\165\145\162\x79"])); goto k4LsP; nD28D: return response()->json($results, 200); goto Rf3rB; tJcmq: $q = 0; goto LFZdB; koGVM: DB::enableQueryLog(); goto DIMn4; hMmil: $results = $ketegori->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\x6e\x61\155\x65" => $value->name]; }); goto kleYR; w6NV4: if (!($q < count($queries))) { goto fvjDJ; } goto vmfmM; k4LsP: $logs->write("\x42\111\x4e\104\x49\x4e\107", "\133" . implode("\x2c\x20", $queries[$q]["\142\151\156\144\x69\156\147\x73"]) . "\135"); goto N7tjE; cYHHG: $queries = DB::getQueryLog(); goto tJcmq; N7tjE: $logs->write("\x53\121\114", $sql); goto AaW3x; AaW3x: P7kzw: goto xFwUs; goK9q: goto BPFbv; goto cDWB2; LFZdB: BPFbv: goto w6NV4; xFwUs: $q++; goto goK9q; DBfdb: if (!$ketegori) { goto OMqAM; } goto hMmil; V378M: $results = []; goto DBfdb; Rf3rB: goto okl39; goto cWKEL; kleYR: OMqAM: goto nD28D; cDWB2: fvjDJ: goto V378M; cWKEL: default: return response()->json(request()->param, 200); goto okl39; } goto E0FjQ; FmsoN: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\x6f\x67"); goto jnp85; eQSbG: LbbFI: goto qLhJ4; jnp85: if (!(request()->has("\160\x61\x72\141\x6d") && request()->param != '')) { goto LbbFI; } goto X2cdO; qLhJ4: } public function update(Request $request, string $id) : JsonResponse { return response()->json($request, 200); } public function destroy(string $id) : JsonResponse { return response()->json($id, 200); } public function exportPDF(Request $request) { goto htsAO; ui9g0: return view("\x70\144\146\56\141\x67\162\x65\x65\x6d\145\x6e\164\137\154\145\164\164\145\162"); goto COazw; JfJK7: $logs->write(__FUNCTION__, "\123\124\x41\122\124"); goto ui9g0; htsAO: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\114\157\x67"); goto JfJK7; COazw: $logs->write(__FUNCTION__, "\x53\x54\x4f\x50\xd\12"); goto cG3pU; cG3pU: } }
