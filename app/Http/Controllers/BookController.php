<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:13             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers; use App\Logs; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Crypt; use Illuminate\Support\Facades\Storage; use Yajra\DataTables\Facades\DataTables; class BookController extends Controller { protected $client_id = ''; public function __construct() { $this->middleware("\141\165\164\x68"); $this->client_id = config("\x61\160\x70\56\143\154\151\145\x6e\x74\137\151\144", ''); } public function index(Request $request) { return view("\x72\145\141\x64\142\x6f\157\153"); } public function getBook(Request $request) { goto TGsL5; pOhca: $decryptedContents = Crypt::decrypt($encryptedContents); goto CkI_X; AOq1r: $filePath = "\160\162\151\x76\141\164\145\57\x62\157\x6f\x6b\x73\x2f" . $file; goto sf5On; sf5On: $filename = explode("\56", basename($filePath))[0]; goto NhDA0; NhDA0: $encryptedContents = Storage::get($filePath); goto pOhca; WsA0n: $file = $book[0]->filename; goto AOq1r; TGsL5: $book = DB::table("\164\x6d\141\x70\160\x69\156\147\x5f\142\157\x6f\153\40\x61\x73\40\141")->select(["\142\x2e\146\151\154\145\156\x61\x6d\x65"])->join("\164\142\157\157\153\x20\141\163\x20\x62", "\x61\56\142\x6f\x6f\153\x5f\x69\x64", "\75", "\x62\56\142\x6f\x6f\153\x5f\x69\x64")->where("\x61\56\x63\154\151\x65\x6e\164\x5f\151\x64", $this->client_id)->where("\141\x2e\x62\x6f\157\x6b\x5f\151\144", $request->token)->get(); goto WsA0n; CkI_X: return response()->make($decryptedContents, 200, ["\x43\x6f\x6e\x74\145\x6e\x74\x2d\x54\171\x70\x65" => "\141\160\160\x6c\x69\143\x61\x74\151\157\156\57\x70\144\146", "\103\157\x6e\x74\x65\156\164\55\104\151\x73\x70\157\x73\x69\x74\151\x6f\x6e" => "\x69\x6e\154\151\156\145\73\40\146\x69\x6c\145\x6e\x61\x6d\x65\x3d\42" . $filename . "\56\160\144\146\42"]); goto PQp1K; PQp1K: } public function ReadCheck(Request $request) { goto gk48F; HNiiR: if ($cek_stock->remaining > 0) { goto SpiZy; } goto h2UUR; h2UUR: return response()->json(["\143\157\144\x65" => "\62", "\x6d\145\x73\163\141\147\145" => "\123\x74\x6f\153\x20\x62\165\153\x75\40\163\x75\x64\141\150\40\x68\141\x62\x69\163\54\40\x73\x69\154\x61\x68\x6b\x61\x6e\x20\x74\165\x6e\x67\x67\165\x21"], 200); goto N_mux; jmClS: $check_age = $this->AgeCheck($request); goto kbW2d; VrKm4: if (!($age["\143\157\144\145"] == "\62")) { goto GV2DA; } goto Y10O2; gk48F: Carbon::setLocale("\x69\x64"); goto N7MiQ; kbW2d: $age = json_decode($check_age->getContent(), true); goto VrKm4; Y10O2: return response()->json($age, 200); goto r6aRK; Vf_RF: return response()->json(["\143\157\x64\145" => "\60", "\155\x65\163\x73\141\147\x65" => "\124\145\x72\x6a\141\144\151\40\153\145\163\141\154\141\150\x61\x6e\x20\x73\151\x6c\141\x68\x6b\141\156\40\144\151\143\157\x62\x61\x20\153\145\x6d\x62\x61\154\151\41"], 200); goto qaLBM; i0J1y: SpiZy: goto NqkDj; jF9aS: $cek_stock = DB::table("\x74\x6d\x61\x70\x70\x69\x6e\x67\x5f\142\157\x6f\x6b\40\x61\x73\40\141")->select([DB::raw("\x61\56\x63\x6f\160\x79\40\55\40\x49\x46\116\x55\114\114\50\x64\56\x74\157\164\141\154\x2c\40\60\51\40\141\163\40\162\145\x6d\x61\151\156\151\156\x67")])->leftJoin(DB::raw("\x28\12\x20\x20\x20\x20\40\40\40\x20\40\x20\x20\40\40\40\x20\40\x20\40\x20\x20\123\105\114\x45\103\124\xa\x20\x20\40\40\x20\x20\40\x20\x20\40\40\x20\40\40\40\x20\40\40\x20\x20\x20\x20\40\40\x73\x72\x63\56\142\157\157\153\x5f\151\144\x2c\12\x20\x20\40\x20\x20\x20\x20\40\40\40\x20\x20\40\40\x20\x20\x20\40\x20\40\x20\x20\x20\40\x53\x55\x4d\50\103\x41\123\x45\x20\127\x48\105\116\40\x73\x72\143\56\164\x6f\164\x61\x6c\x20\x3e\x20\x31\40\x54\x48\105\x4e\x20\x31\x20\x45\x4c\123\x45\x20\x73\162\x63\56\x74\x6f\x74\x61\154\40\x45\x4e\x44\x29\40\x41\123\40\164\x6f\x74\x61\154\xa\x20\x20\40\x20\40\40\40\40\x20\x20\x20\40\40\x20\x20\40\40\40\40\40\x46\x52\117\x4d\40\x28\12\40\x20\40\x20\x20\40\40\x20\x20\x20\40\x20\40\40\40\x20\x20\x20\40\x20\40\x20\x20\x20\123\x45\114\x45\x43\124\x20\x73\162\56\x62\157\x6f\153\137\x69\144\x2c\40\103\x4f\x55\x4e\124\x28\x73\162\56\x62\x6f\x6f\153\x5f\151\x64\x29\x20\x41\x53\x20\x74\x6f\x74\141\x6c\x2c\x20\163\x72\x2e\x75\x73\x65\x72\x5f\151\x64\xa\x20\40\x20\x20\x20\40\x20\40\40\x20\40\40\x20\40\x20\40\x20\40\40\40\x20\40\40\40\x46\122\117\115\40\x28\12\x20\40\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\40\x20\x20\40\x20\40\40\x20\x20\x20\40\40\x20\40\40\x53\105\114\x45\103\x54\x20\142\x6f\157\x6b\x5f\151\x64\x2c\40\165\163\145\162\137\x69\x64\12\x20\40\x20\40\x20\x20\40\x20\x20\40\x20\x20\x20\40\40\x20\x20\40\40\40\40\x20\40\x20\x20\x20\40\40\x46\x52\x4f\115\40\x74\x74\x72\x78\137\x72\145\141\144\xa\x20\x20\40\40\40\40\40\40\x20\40\x20\40\40\x20\40\x20\x20\40\40\40\40\x20\40\40\40\x20\x20\40\127\x48\x45\122\105\12\x20\40\40\x20\x20\40\x20\40\40\x20\x20\x20\40\x20\40\x20\40\x20\x20\40\40\40\x20\40\40\40\x20\x20\40\x20\x20\40\x63\154\151\x65\156\x74\x5f\x69\144\40\75\x20\x27" . $this->client_id . "\47\12\40\x20\40\40\x20\40\x20\40\40\40\x20\x20\40\x20\40\x20\x20\40\x20\x20\40\x20\40\x20\x20\40\40\40\40\40\40\x20\101\116\104\x20\x66\154\x61\x67\x5f\145\156\x64\x20\x21\x3d\x20\x27\x59\x27\xa\40\40\40\40\40\40\x20\x20\40\x20\40\x20\x20\x20\40\x20\x20\x20\40\40\40\x20\x20\x20\x20\40\40\40\12\40\40\x20\40\40\40\x20\x20\40\x20\40\40\40\x20\x20\40\x20\40\x20\40\40\40\40\40\x20\x20\x20\40\x55\x4e\x49\x4f\x4e\40\x41\x4c\114\12\40\x20\40\x20\x20\x20\40\40\x20\x20\x20\40\x20\40\40\40\40\x20\x20\40\x20\x20\40\x20\40\40\40\40\12\x20\40\40\40\x20\x20\x20\40\x20\40\x20\x20\x20\40\x20\x20\40\40\x20\x20\x20\40\x20\40\x20\x20\x20\40\x53\x45\x4c\x45\x43\124\x20\142\x6f\x6f\153\x5f\x69\144\54\x20\x75\163\145\x72\137\151\144\xa\x20\40\40\x20\x20\x20\40\40\x20\x20\x20\40\x20\40\40\40\40\x20\x20\40\40\40\x20\40\x20\x20\x20\40\106\x52\117\115\x20\164\162\x65\x6e\164\137\x62\157\x6f\x6b\12\40\x20\40\40\x20\40\40\40\x20\40\40\40\40\40\x20\40\x20\40\40\40\x20\x20\x20\40\x20\40\40\x20\127\x48\105\122\x45\12\40\x20\x20\40\40\x20\x20\40\x20\40\40\40\40\x20\40\40\40\40\40\40\x20\40\x20\40\x20\x20\x20\x20\40\40\40\x20\143\x6c\x69\x65\x6e\164\137\x69\144\40\75\x20\x27" . $this->client_id . "\47\12\40\40\40\x20\40\40\40\40\x20\40\40\x20\x20\40\x20\40\40\x20\40\40\40\40\x20\x20\40\x20\x20\x20\x20\x20\x20\40\x41\116\104\x20\146\154\141\x67\137\x65\x6e\144\x20\41\75\x20\x27\x59\x27\xa\40\40\40\x20\40\40\40\40\x20\40\x20\x20\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\x20\x20\x20\40\x20\40\x20\40\40\x41\116\104\40\x75\163\x65\x72\x5f\151\144\x20\41\75\40\x27" . $user->id . "\47\xa\x20\40\x20\x20\40\40\40\x20\40\40\x20\x20\40\40\x20\x20\40\x20\40\40\40\x20\x20\x20\51\40\163\x72\12\x20\x20\x20\x20\40\40\x20\x20\x20\x20\x20\x20\x20\x20\x20\40\40\x20\40\40\x20\40\x20\40\x67\x72\157\x75\x70\40\x62\x79\x20\x73\162\56\142\x6f\157\153\x5f\151\144\x2c\40\163\x72\x2e\165\163\x65\162\137\151\144\12\40\40\40\x20\x20\x20\40\x20\40\40\40\x20\40\x20\40\40\x20\40\40\x20\x29\x20\163\x72\143\12\x20\x20\x20\x20\40\x20\x20\40\40\40\40\40\40\40\40\x20\x20\40\x20\x20\107\x52\117\125\x50\x20\102\x59\40\x73\x72\x63\x2e\x62\157\x6f\153\x5f\151\144\51\40\x61\x73\x20\x64"), function ($join) { $join->on("\x61\56\x62\157\157\x6b\137\x69\144", "\75", "\x64\56\x62\157\x6f\x6b\x5f\151\144"); })->where("\x61\x2e\143\x6c\151\x65\156\x74\137\x69\x64", "\75", $this->client_id)->where("\x61\x2e\142\x6f\x6f\x6b\137\151\144", "\75", $request->pdfToken)->first(); goto HNiiR; N_mux: goto uUJ6o; goto i0J1y; NqkDj: return response()->json(["\143\x6f\x64\145" => "\x31", "\x6d\x65\163\x73\141\x67\145" => "\x4f\153"], 200); goto GQ6f0; N7MiQ: $user = auth()->user(); goto jmClS; GQ6f0: uUJ6o: goto Vf_RF; r6aRK: GV2DA: goto jF9aS; qaLBM: } public function AgeCheck(Request $request) { goto xsx3u; EaueG: rb4Jh: goto XtuMu; Zdjrq: if (!($age >= $request->age)) { goto rb4Jh; } goto Nb01V; OtYXC: $birthday = $attr[0]->birthday ?? Carbon::now("\101\163\x69\141\x2f\112\x61\x6b\x61\162\164\141"); goto Qg2Q8; xsx3u: Carbon::setLocale("\151\144"); goto r4SZl; Nb01V: return response()->json(["\143\x6f\144\x65" => "\x31", "\155\145\x73\x73\x61\x67\145" => "\117\153"], 200); goto EaueG; XtuMu: return response()->json(["\x63\x6f\x64\x65" => "\x32", "\155\145\163\x73\x61\x67\x65" => "\x41\156\144\141\40\x42\145\x6c\x75\155\40\x43\165\153\165\160\x20\125\163\151\x61\x20\125\156\164\x75\153\x20\155\145\x6d\142\x61\x63\141\40\102\x75\x6b\x75\40\111\156\151\x21"], 200); goto Udq73; r4SZl: $user = auth()->user(); goto nS5tf; JvWIs: $age = $birthdayC->diffInYears(Carbon::now("\101\x73\151\x61\x2f\x4a\x61\x6b\x61\x72\x74\141")); goto Zdjrq; Qg2Q8: $birthdayC = Carbon::parse($birthday); goto JvWIs; nS5tf: $attr = DB::table("\164\x61\x74\164\162\137\x6d\145\155\x62\x65\x72\40\141\x73\x20\x61")->select(["\141\56\142\x69\x72\164\150\144\141\x79"])->where("\141\56\x63\x6c\151\145\x6e\164\x5f\x69\144", $this->client_id)->where("\x61\56\151\144", $user->id)->get(); goto OtYXC; Udq73: } public function LastRead(Request $request) { goto RTQQk; N604c: return response()->json(["\x63\x6f\x64\145" => "\x31", "\x6d\145\163\x73\141\147\145" => "\x4f\x6b\x21"], 200); goto t_8sK; EjIeF: zS80L: goto ewOc_; zHID_: if ($existingRecord) { goto OMyLo; } goto xniWl; AWrSL: $user = auth()->user(); goto rZ3re; j1khl: OMyLo: goto pWqN1; RTQQk: Carbon::setLocale("\151\144"); goto AWrSL; rZ3re: $existingRecord = DB::table("\164\x74\x72\x78\x5f\162\145\141\x64")->where("\142\x6f\157\x6b\x5f\x69\144", $request->token)->where("\165\163\x65\162\x5f\x69\144", $user->id)->where("\x73\164\141\x72\x74\137\x72\x65\x61\x64", $request->start)->where("\143\x6c\151\145\156\164\x5f\x69\144", $this->client_id)->first(); goto zHID_; D0xSy: return response()->json(["\143\157\144\145" => "\60", "\155\145\163\163\x61\x67\145" => "\106\x61\151\154\x65\144\x21"], 200); goto c82Dm; t_8sK: igR1D: goto BVxHh; IIgvC: iPuTa: goto N604c; pWqN1: $ttrx = DB::table("\164\x74\162\170\x5f\162\145\141\x64")->where("\x62\157\157\153\137\151\x64", $request->token)->where("\165\x73\x65\162\137\x69\144", $user->id)->where("\x73\164\x61\162\164\x5f\x72\x65\141\x64", $request->start)->where("\x63\154\151\145\x6e\x74\x5f\x69\144", $this->client_id)->update(["\145\156\144\137\x72\x65\141\144" => Carbon::now("\101\163\151\x61\x2f\x4a\x61\x6b\x61\x72\x74\x61"), "\146\x6c\x61\147\x5f\x65\156\x64" => $request->active, "\165\x70\144\x61\164\x65\x64\137\141\x74" => Carbon::now("\x41\163\151\141\x2f\112\x61\153\x61\x72\x74\x61")]); goto EjIeF; ewOc_: if ($ttrx) { goto iPuTa; } goto D0xSy; Hmj8a: goto zS80L; goto j1khl; c82Dm: goto igR1D; goto IIgvC; xniWl: $ttrx = DB::table("\x74\164\x72\170\137\x72\145\x61\144")->insert(["\142\x6f\157\153\137\151\144" => $request->token, "\x73\164\141\x72\164\137\x72\145\141\x64" => $request->start, "\x75\163\x65\162\137\151\144" => $user->id, "\x63\x6c\151\145\156\x74\x5f\x69\x64" => $this->client_id, "\x66\x6c\141\x67\137\x65\156\x64" => $request->active, "\145\156\144\x5f\162\145\141\x64" => Carbon::now("\x41\x73\x69\141\x2f\x4a\x61\153\x61\162\x74\x61"), "\x63\x72\x65\141\164\x65\x64\137\x61\x74" => Carbon::now("\101\x73\151\x61\57\x4a\x61\x6b\141\162\x74\x61")]); goto Hmj8a; BVxHh: } public function RentBook(Request $request) { goto T8kKx; h5kJz: if (!$rent) { goto cSE4i; } goto DW3B6; VWpL2: $date = Carbon::now("\101\163\151\x61\x2f\x4a\141\153\x61\x72\x74\141"); goto uoyFe; y3TWN: $check_age = $this->AgeCheck($request); goto x1MC0; kPdfk: $rent_day = 3; goto xlv7s; TDkRH: qZrs0: goto xnbrc; Tq2_a: uKvPj: goto GvbhP; KsFH0: DB::enableQueryLog(); goto kPdfk; YJ9qA: cGEkL: goto VWpL2; e1Z8x: if (!($cek != '')) { goto cGEkL; } goto JNljb; u3SO2: goto Xh06x; goto TDkRH; RKIB9: $logs->write(__FUNCTION__, "\123\124\101\x52\x54"); goto KsFH0; eO9hb: $q = 0; goto e4iJq; x1MC0: $age = json_decode($check_age->getContent(), true); goto IWGjN; xnbrc: $logs->write(__FUNCTION__, "\123\124\117\x50\xd\12"); goto h5kJz; eMDzz: return response()->json(["\x63\x6f\144\x65" => "\60", "\155\145\163\x73\x61\147\145" => "\107\141\147\141\154\40\x42\151\163\141\x20\x50\151\x6e\152\x61\155\40\102\165\153\165\41"], 200); goto A4OBH; GvbhP: $cek_rent = DB::table("\164\x72\145\x6e\x74\x5f\142\157\x6f\x6b\40\141\x73\x20\x61")->select(["\x61\56\x62\157\x6f\x6b\x5f\x69\x64"])->where("\141\56\x63\x6c\151\x65\x6e\164\137\x69\144", $this->client_id)->where("\141\x2e\165\x73\x65\162\137\x69\x64", $user->id)->where("\141\x2e\x62\x6f\x6f\x6b\x5f\x69\144", $request->pdfToken)->where("\141\56\x66\x6c\x61\147\x5f\145\156\144", "\x4e")->get(); goto hYMvV; IWGjN: if (!($age["\143\x6f\144\145"] == "\x32")) { goto V1XSR; } goto P0EHl; o4UPB: $book = json_decode($check_book->getContent(), true); goto YSV48; xlv7s: try { $rent_days = DB::select("\x53\105\x4c\105\103\x54\x20\140\166\x61\x6c\165\145\x60\40\x46\122\117\x4d\40\164\160\x61\162\141\x6d\145\164\145\x72\x20\x57\110\x45\122\105\40\140\156\x61\155\x65\140\75\47\162\145\x6e\x74\137\x62\x6f\x6f\x6b\47\73"); $rent_day = $rent_days ? (int) $rent_days[0]->value : 3; } catch (\PDOException $e) { $logs->write("\x45\122\x52\x4f\x52\x20\120\101\x52\x41\x4d\x45\124\x45\x52\x3d\x27\x72\x65\x6e\164\137\x62\157\157\153\x27", $e->getMessage() . "\12"); } goto y3TWN; e4iJq: Xh06x: goto Ha9_4; JNljb: return response()->json(["\143\157\144\x65" => "\x32", "\x6d\145\163\x73\x61\x67\x65" => "\x41\156\144\141\40\123\165\144\x61\150\x20\x4d\145\x6d\151\156\x6a\x61\x6d\x20\x42\165\x6b\165\40\x49\x6e\151\41"], 200); goto YJ9qA; h3iOv: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\157\x67"); goto RKIB9; p3vTu: $queries = DB::getQueryLog(); goto eO9hb; yxp93: $logs->write("\x42\x49\x4e\104\x49\x4e\107", "\x5b" . implode("\x2c\x20", $queries[$q]["\142\x69\x6e\x64\x69\x6e\147\163"]) . "\135"); goto Jnifl; uoyFe: $end_date = $date->copy()->addDays(3); goto r2dpI; IgtTA: i4oMx: goto byf5P; hYMvV: $cek = $cek_rent[0]->book_id ?? ''; goto e1Z8x; YSV48: if (!($book["\x63\x6f\x64\x65"] == "\x32")) { goto uKvPj; } goto k_uZ9; DW3B6: return response()->json(["\x63\x6f\x64\145" => "\61", "\155\145\163\163\141\147\x65" => "\102\145\162\150\x61\x73\151\x6c\x20\x50\151\x6e\x6a\141\x6d\40\x42\x75\153\x75\41"], 200); goto EFWyK; EFWyK: cSE4i: goto eMDzz; Hm6II: V1XSR: goto beDBV; r2dpI: $rent = DB::table("\x74\162\145\156\164\x5f\142\x6f\x6f\153")->insert(["\143\154\151\x65\156\x74\x5f\x69\x64" => $this->client_id, "\165\163\x65\162\137\151\x64" => $user->id, "\x62\157\x6f\153\137\x69\144" => $request->pdfToken, "\x73\x74\141\162\164\137\144\x61\164\145" => $date, "\x65\156\x64\137\x64\141\164\145" => $end_date, "\146\x6c\x61\x67\137\x65\x6e\x64" => "\x4e", "\143\162\x65\141\164\x65\144\x5f\141\x74" => Carbon::now("\x41\163\151\141\57\112\141\153\141\162\164\x61")]); goto p3vTu; YirzX: $user = auth()->user(); goto h3iOv; Jnifl: $logs->write("\123\121\114", $sql); goto IgtTA; k_uZ9: return response()->json($book, 200); goto Tq2_a; E9hSY: $sql = Str::replaceArray("\77", $queries[$q]["\x62\151\156\144\x69\156\x67\163"], str_replace("\x3f", "\x27\77\47", $queries[$q]["\161\x75\145\x72\x79"])); goto yxp93; Ha9_4: if (!($q < count($queries))) { goto qZrs0; } goto E9hSY; beDBV: $check_book = $this->RentCheck(); goto o4UPB; P0EHl: return response()->json($age, 200); goto Hm6II; T8kKx: Carbon::setLocale("\x69\144"); goto YirzX; byf5P: $q++; goto u3SO2; A4OBH: } public function RentCheck() { goto Lt1wI; ZOp5f: $end_date = $now->addDays($rent_book); goto S1qT2; jpyt4: $date = $now->format("\x59\55\155\x2d\144"); goto ZOp5f; bZugo: $user = auth()->user(); goto JM2YT; yx27G: $now = Carbon::now("\x41\163\x69\x61\x2f\x4a\141\x6b\141\162\x74\x61"); goto jpyt4; UZamq: try { $rent_books = DB::select("\123\105\x4c\105\103\x54\40\140\166\141\154\x75\x65\x60\40\106\122\x4f\x4d\40\x74\160\141\162\141\155\x65\164\x65\162\40\x57\110\105\122\105\x20\x60\x6e\x61\155\x65\140\75\47\x6d\x61\153\163\137\162\145\x6e\x74\x5f\142\x6f\x6f\153\x27\73"); $rent_book = $rent_books ? (int) $rent_books[0]->value : 3; } catch (\PDOException $e) { $logs->write("\105\x52\x52\x4f\122\x20\x50\x41\122\101\x4d\x45\x54\x45\122\75\47\x6d\141\153\x73\137\x72\x65\x6e\164\137\142\157\x6f\x6b\x27", $e->getMessage() . "\xa"); } goto yx27G; nL2el: return response()->json(["\x63\x6f\x64\x65" => "\62", "\x6d\145\163\163\x61\147\x65" => "\113\x75\157\164\141\x20\120\151\x6e\x6a\x61\155\x61\x6e\40\102\165\x6b\x75\x20\x41\156\144\x61\x20\123\x75\x64\x61\x68\x20\x48\x61\x62\x69\163\41"], 200); goto F_0TO; pz641: $book = $query_book[0]->total ?? $rent_book; goto g2jAu; eX3iA: EUEtl: goto nL2el; JM2YT: $rent_book = 3; goto UZamq; S1qT2: $query_book = DB::table("\164\x72\x65\x6e\164\137\142\157\157\153\40\141\x73\x20\x61")->select([DB::raw("\x43\117\x55\116\x54\50\x44\111\x53\x54\x49\116\x43\124\x20\142\x6f\x6f\153\x5f\151\x64\x29\x20\101\x53\40\164\157\164\141\x6c")])->where("\x61\56\x63\x6c\x69\145\x6e\164\x5f\x69\144", $this->client_id)->where("\x61\56\x75\x73\145\162\x5f\x69\144", $user->id)->where("\141\x2e\146\154\141\147\137\145\156\144", "\x4e")->get(); goto pz641; fACf5: return response()->json(["\x63\x6f\144\x65" => "\61", "\x6d\145\163\x73\x61\147\145" => "\117\x6b"], 200); goto eX3iA; Lt1wI: Carbon::setLocale("\x69\x64"); goto bZugo; g2jAu: if (!($book < $rent_book)) { goto EUEtl; } goto fACf5; F_0TO: } public function ReturnBook(Request $request) { goto EAOmE; sQSLx: if (!($q < count($queries))) { goto gLzO1; } goto bkkaK; vIm0z: if (!$return) { goto WPxJP; } goto RJvbO; twEZC: gLzO1: goto In_gC; EAOmE: Carbon::setLocale("\x69\x64"); goto apBaw; In_gC: $logs->write(__FUNCTION__, "\x53\x54\x4f\120\xd\xa"); goto vIm0z; FN8oW: $logs->write("\x42\111\x4e\x44\x49\x4e\x47", "\133" . implode("\x2c\40", $queries[$q]["\x62\x69\x6e\144\151\156\x67\163"]) . "\135"); goto IkFBS; YXMbV: goto AiA42; goto twEZC; bqmzi: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\x6f\147"); goto ZO5DX; zsPV1: WPxJP: goto iZVvK; ZO5DX: $logs->write(__FUNCTION__, "\x53\124\x41\122\x54"); goto wQVON; N1g8R: $now = Carbon::now("\101\163\151\x61\x2f\112\141\153\x61\x72\x74\x61"); goto U0Xht; apBaw: $user = auth()->user(); goto bqmzi; ory5n: $q++; goto YXMbV; RJvbO: return response()->json(["\x63\157\144\145" => "\61", "\155\145\x73\x73\141\147\145" => "\x42\x65\x72\150\x61\163\x69\x6c\x20\x4b\x65\x6d\x62\x61\x6c\151\153\x61\x6e\x20\102\165\153\x75\x21"], 200); goto zsPV1; U0Xht: $date = $now->format("\x59\x2d\155\x2d\x64"); goto z9TdU; bkkaK: $sql = Str::replaceArray("\77", $queries[$q]["\x62\x69\x6e\144\x69\156\147\163"], str_replace("\77", "\47\77\47", $queries[$q]["\161\x75\x65\x72\x79"])); goto FN8oW; z9TdU: $return = DB::table("\x74\x72\x65\x6e\x74\x5f\142\157\157\153")->where("\x75\x73\x65\162\x5f\x69\144", $user->id)->where("\x63\154\151\x65\156\164\137\x69\x64", $this->client_id)->where("\142\x6f\x6f\153\x5f\151\x64", $request->pdfToken)->update(["\146\x6c\x61\x67\137\x65\156\144" => "\131", "\165\x70\x64\141\x74\145\x64\137\141\164" => $now]); goto Dit77; IkFBS: $logs->write("\123\121\x4c", $sql); goto ABOmo; ABOmo: pgCna: goto ory5n; Dit77: $queries = DB::getQueryLog(); goto mQQHC; iZVvK: return response()->json(["\x63\157\144\x65" => "\60", "\x6d\145\163\x73\x61\x67\x65" => "\x47\141\x67\141\154\x20\113\145\155\142\141\x6c\x69\153\x61\x6e\40\102\x75\x6b\165\x21"], 200); goto oYKWd; mQQHC: $q = 0; goto aatG_; aatG_: AiA42: goto sQSLx; wQVON: DB::enableQueryLog(); goto N1g8R; oYKWd: } public function RentHistory() { goto tiTa5; tiTa5: $user = auth()->user(); goto q6quS; PpL8e: try { DB::enableQueryLog(); $results = DB::table("\164\162\x65\x6e\x74\137\x62\157\x6f\153\x20\x61\163\x20\x61")->select(["\x61\56\142\157\x6f\153\137\151\144", "\x62\56\x74\x69\164\154\145", "\141\x2e\x73\x74\141\x72\164\137\144\x61\164\x65", "\x61\56\x65\156\144\x5f\144\141\x74\x65", "\141\56\x66\x6c\141\x67\137\145\x6e\x64", "\x62\x2e\143\157\166\145\x72"])->join("\x74\142\157\157\153\40\141\163\40\x62", "\x61\56\142\x6f\157\153\137\x69\144", "\x3d", "\x62\x2e\x62\x6f\x6f\x6b\x5f\151\x64")->where("\x61\56\x63\x6c\151\x65\x6e\x74\x5f\x69\144", $this->client_id)->where("\141\x2e\x75\x73\145\x72\137\151\x64", $user->id)->orderBy("\x61\x2e\163\164\141\162\164\x5f\144\x61\164\145", "\101\x53\103")->get(); } catch (Throwable $th) { } goto wv9Fu; wv9Fu: return DataTables::of($results)->escapeColumns()->editColumn("\x73\164\141\x72\164\x5f\x64\141\164\x65", function ($value) { return Carbon::parse($value->start_date)->toDateTimeString(); })->editColumn("\145\x6e\144\x5f\144\141\x74\x65", function ($value) { return Carbon::parse($value->end_date)->toDateTimeString(); })->addIndexColumn()->toJson(); goto xgoxs; q6quS: $results = []; goto PpL8e; xgoxs: } }
