<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:13             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers\Core\Dashboard; use App\Logs; use App\Libraries; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use App\Http\Controllers\Controller; class DashboardController extends Controller { protected $client_id = ''; public function __construct() { goto erybl; nmd5C: $this->client_id = config("\141\160\x70\x2e\x63\x6c\151\x65\x6e\x74\137\x69\144", ''); goto VTaBw; VTaBw: $this->isDinas = Libraries::isDinas(); goto PxcJj; erybl: $this->middleware("\141\x75\164\150"); goto nmd5C; PxcJj: } public function dashAtas() { goto udfnf; PA6r_: $q++; goto oKoiQ; SCMpm: AqzHO: goto aQce4; I0CR3: $logs->write(__FUNCTION__, "\123\x54\101\x52\x54"); goto g_qYi; oKoiQ: goto h8FI6; goto V4lzU; Bu6Jz: h8FI6: goto sl9D6; ufBrg: $client_id = [$this->client_id]; goto Pt3x6; G9m3Z: $book = DB::table("\x74\x6d\x61\x70\x70\x69\156\147\x5f\142\157\x6f\153\40\x61\163\40\x61")->select([DB::raw("\x43\x4f\x55\x4e\124\x28\141\56\x62\x6f\x6f\x6b\x5f\x69\144\x29\40\141\163\x20\142\157\x6f\153")])->whereIn("\x61\x2e\143\154\x69\145\156\164\137\151\x64", $client_id)->first(); goto D3ZUy; g_qYi: DB::enableQueryLog(); goto nfrO7; sl9D6: if (!($q < count($queries))) { goto tIQZb; } goto cr0Z3; nfrO7: if ($this->isDinas["\x73\164\141\164\x75\x73"]) { goto AqzHO; } goto ufBrg; aQce4: $client_id = $this->getClientID($this->client_id, $this->isDinas); goto iPBFT; udfnf: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\x6f\147"); goto I0CR3; cr0Z3: $sql = Str::replaceArray("\77", $queries[$q]["\142\151\156\144\x69\156\147\x73"], str_replace("\77", "\x27\x3f\47", $queries[$q]["\161\165\145\162\x79"])); goto j9GQo; V4lzU: tIQZb: goto OJRrM; do9uD: $q = 0; goto Bu6Jz; btap_: return response()->json($results, 200); goto gOO9G; LZJ2n: $visitor = DB::table("\x74\x76\151\x73\151\x74\x6f\162\x73\40\141\x73\40\141")->select([DB::raw("\103\x4f\125\116\124\50\x61\x2e\x69\x64\x29\x20\x61\163\40\x76\151\x73\151\164\x6f\162")])->whereIn("\141\56\x63\154\x69\x65\x6e\164\x5f\x69\144", $client_id)->first(); goto G9m3Z; OJRrM: $logs->write(__FUNCTION__, "\x53\x54\x4f\120\xd\12"); goto btap_; D3ZUy: $member = DB::table("\x75\x73\145\162\x73\40\141\x73\x20\141")->select([DB::raw("\103\117\x55\x4e\124\50\x61\56\x69\x64\x29\40\141\x73\x20\155\x65\x6d\x62\x65\162")])->whereIn("\141\56\x63\154\x69\145\156\164\137\151\x64", $client_id)->where("\x61\x2e\x72\157\154\145", "\x6d\x65\x6d\142\145\162")->first(); goto gBGpr; yNbS7: X3fOI: goto PA6r_; iPBFT: vaHOb: goto LZJ2n; Pt3x6: goto vaHOb; goto SCMpm; j9GQo: $logs->write("\x42\111\116\x44\111\116\107", "\x5b" . implode("\54\40", $queries[$q]["\142\151\156\144\x69\x6e\x67\x73"]) . "\x5d"); goto N9rhy; gBGpr: $po = 0; goto o4Psz; N9rhy: $logs->write("\x53\121\114", $sql); goto yNbS7; o4Psz: $results = ["\166\151\163\151\164\157\162" => number_format($visitor->visitor, 0, "\x2c", "\56"), "\x62\157\x6f\x6b" => number_format($book->book, 0, "\x2c", "\x2e"), "\x6d\x65\x6d\142\x65\162" => number_format($member->member, 0, "\54", "\x2e"), "\160\x6f" => number_format($po, 0, "\54", "\56")]; goto moHW4; moHW4: $queries = DB::getQueryLog(); goto do9uD; gOO9G: } public function dashBawah(Request $request) { goto oJxZA; b0lsb: $client_id = $this->getClientID($this->client_id, $this->isDinas); goto A9J8D; auCwM: $logs->write("\x53\121\114", $sql . "\15\xa"); goto qpaYi; ISA1I: $read_monthly = $this->ReadMonthly($request, $months, $client_id); goto LVIi5; rR3gB: fcxvI: goto b0lsb; iEp1b: DB::enableQueryLog(); goto t2XMs; OfB2Z: if (!($q < count($queries))) { goto tB3I2; } goto TK0GD; ZnLA4: $visit_daily = $this->VisitDaily($request, $days, $client_id); goto ISA1I; PH7Jf: $months = $this->getMonths($request->date); goto F5vEB; ayv3j: $q = 0; goto Kzm6l; t2XMs: if ($this->isDinas["\x73\x74\141\164\165\x73"]) { goto fcxvI; } goto crjRi; GPCko: $read_daily = $this->ReadDaily($request, $days, $client_id); goto ZnLA4; ueHqj: $logs->write(__FUNCTION__, "\123\x54\x4f\120\xd\xa"); goto erMaT; Z1XTQ: tB3I2: goto ueHqj; UXmRf: $queries = DB::getQueryLog(); goto ayv3j; erMaT: return response()->json($results, 200); goto n24aa; oJxZA: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\157\x67"); goto khqN_; SKGf8: $book_read = $this->TopBookRead($request, $client_id); goto A7dcM; qpaYi: dxcG3: goto q1utb; VjT93: $member_read = $this->TopMemberRead($request, $client_id); goto SKGf8; TK0GD: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\156\x64\x69\156\147\163"], str_replace("\x3f", "\47\x3f\x27", $queries[$q]["\161\x75\145\x72\x79"])); goto xMX2j; q1utb: $q++; goto DVl3r; a2lpi: goto zyDnp; goto rR3gB; A9J8D: zyDnp: goto VA2qj; F5vEB: $formattedDate = Carbon::createFromFormat("\131\x2d\x6d", $request->date)->format("\x46\x20\131"); goto GPCko; LVIi5: $visit_monthly = $this->VisitMonthly($request, $months, $client_id); goto C0gI8; C0gI8: $growth_member = $this->GrowthMember($request, $months, $client_id); goto VjT93; xMX2j: $logs->write("\102\111\116\x44\x49\x4e\107", "\x5b" . implode("\x2c\x20", $queries[$q]["\x62\151\x6e\144\x69\x6e\x67\163"]) . "\x5d"); goto auCwM; khqN_: $logs->write(__FUNCTION__, "\123\x54\x41\122\x54"); goto iEp1b; Kzm6l: QNBB2: goto OfB2Z; VA2qj: $days = $this->getDates($request->date); goto PH7Jf; DVl3r: goto QNBB2; goto Z1XTQ; crjRi: $client_id = [$this->client_id]; goto a2lpi; A7dcM: $results = ["\144\x61\x79\x73" => $days, "\x6d\157\x6e\164\150\163" => $months["\x6e\141\155\x65"], "\x66\157\162\x6d\x61\164\164\145\144\104\x61\164\x65" => $formattedDate, "\x72\145\141\x64\137\144\141\151\x6c\x79" => $read_daily, "\166\151\163\151\164\x5f\144\x61\x69\154\171" => $visit_daily, "\x72\145\x61\144\x5f\x6d\157\x6e\164\150\154\171" => $read_monthly, "\166\x69\163\151\164\x5f\x6d\157\x6e\x74\x68\x6c\x79" => $visit_monthly, "\x67\162\157\167\x74\x68\x5f\155\x65\x6d\x62\145\162" => $growth_member, "\155\145\x6d\142\145\x72\x5f\162\145\x61\x64" => $member_read, "\x62\x6f\157\153\137\162\145\141\x64" => $book_read]; goto UXmRf; n24aa: } private function getClientID($client_id, $isDinas) { goto IQb8q; IQb8q: $sql = DB::table("\x74\x63\154\x69\145\x6e\x74\40\141\163\40\141")->select("\141\56\143\154\x69\x65\156\164\137\x69\x64"); goto VPYwa; Ya0Cl: $sql->where("\141\56\160\x72\x6f\166\151\x6e\163\x69\137\x69\144", $this->isDinas["\x70\162\x6f\166\151\x6e\x73\151"]); goto zsZu4; LxuMY: $sql->where("\x61\x2e\153\x61\142\165\160\141\164\x65\156\x5f\151\x64", $this->isDinas["\153\141\x62\165\160\141\164\x65\156"]); goto m0zir; Hhgzf: $results = $sql->get()->pluck("\143\x6c\x69\x65\156\x74\137\151\x64"); goto tvJeR; m0zir: x2ITN: goto Hhgzf; zsZu4: kiEmn: goto JYrUR; VPYwa: if (!($this->isDinas["\x6c\145\166\145\154"] != "\66\60\x30\61")) { goto kiEmn; } goto Ya0Cl; tvJeR: return $results; goto HZC22; JYrUR: if (!($this->isDinas["\x6c\x65\166\x65\154"] == "\x36\x30\x30\63")) { goto x2ITN; } goto LxuMY; HZC22: } private function getDates($date) { goto FJ_S1; i8AdV: $endDate = $currentDate; goto o4p0A; X4wXJ: $startDate = Carbon::parse($date)->startOfMonth(); goto XkrzZ; l6Ncw: if (!$startDate->isSameMonth($currentDate)) { goto DEgDG; } goto i8AdV; Ijg24: gYiq1: goto HiU7I; HiU7I: return $dateArray; goto HB8Lh; X20_e: if (!$startDate->lte($endDate)) { goto gYiq1; } goto HuTZ0; o4p0A: DEgDG: goto c52wb; FJ_S1: $dateArray = []; goto X4wXJ; cJFt2: $startDate->addDay(); goto gzunF; Y90j6: $currentDate = Carbon::now(); goto l6Ncw; XkrzZ: $endDate = Carbon::parse($date)->endOfMonth(); goto Y90j6; gzunF: goto otgbM; goto Ijg24; c52wb: otgbM: goto X20_e; HuTZ0: $dateArray[] = $startDate->format("\144"); goto cJFt2; HB8Lh: } private function getMonths($date) { goto QLzmf; QLzmf: $monthArray = []; goto ju3tm; ju3tm: $date = Carbon::parse($date); goto WKm2Z; qYCeX: $monthNames = []; goto gX7kO; kz3_9: uzpN6: goto MR1vQ; tZi1q: $months = Carbon::create($year, 1, 1)->months(); goto HsJV4; WKm2Z: $year = $date->year; goto tZi1q; HsJV4: $monthNumbers = range(1, 12); goto qYCeX; gX7kO: foreach ($monthNumbers as $month) { goto WSjpi; isWOx: Yt4uJ: goto MNxn_; WSjpi: $monthArray["\156\141\155\x65"][] = Carbon::createFromFormat("\131\55\155", "{$year}\55{$month}")->format("\115"); goto vjkfZ; vjkfZ: $monthArray["\155\157\x6e\x74\150"][] = Carbon::createFromFormat("\131\55\155", "{$year}\x2d{$month}")->format("\x59\x2d\155"); goto isWOx; MNxn_: } goto kz3_9; MR1vQ: return $monthArray; goto mwAeQ; mwAeQ: } private function ReadDaily($request, $days, $client_id) { goto G5_b6; G5_b6: $reader = DB::table("\164\164\x72\x78\x5f\x72\x65\141\x64\40\141\163\x20\x61")->select([DB::raw("\104\101\x59\50\x73\164\141\x72\x74\x5f\x72\145\x61\144\51\x20\x61\163\40\x64\x61\x79"), DB::raw("\103\117\x55\116\x54\50\104\111\123\124\111\116\x43\x54\40\141\x2e\142\x6f\x6f\x6b\137\x69\144\x29\40\141\163\x20\162\145\x61\x64\x65\x72")])->join("\164\x63\154\151\x65\156\x74\40\x61\x73\x20\x62", function ($join) { $join->on("\x61\56\143\x6c\151\x65\156\x74\137\151\x64", "\x3d", "\x62\x2e\143\x6c\151\145\156\x74\x5f\151\x64"); })->whereRaw("\x44\101\x54\x45\137\106\117\x52\x4d\101\x54\50\x61\56\163\164\141\x72\x74\x5f\x72\145\141\144\x2c\40\47\45\131\x2d\45\x6d\x27\x29\40\x3d\40\x27{$request->date}\47")->whereIn("\x61\56\x63\x6c\151\145\156\x74\137\x69\144", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\142\x2e\x70\162\x6f\x76\151\x6e\x73\x69\137\151\144", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\142\56\x6b\141\142\x75\160\141\164\145\x6e\x5f\x69\x64", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\x62\x2e\x69\156\x73\x74\x61\156\x73\151\137\x6e\x61\x6d\145", $request->wl); })->groupBy(DB::raw("\x44\x41\131\50\163\x74\x61\162\x74\x5f\162\145\x61\144\x29"))->get(); goto OQ4vS; OQ4vS: $result = collect($days)->map(function ($day) use($reader) { $existingDay = $reader->firstWhere("\x64\141\171", $day); return ["\144\x61\x79" => $day, "\144\x61\x74\x61" => $existingDay ? $existingDay->reader : 0]; }); goto ZMAQD; ZMAQD: return $result; goto YHdA8; YHdA8: } private function VisitDaily($request, $days, $client_id) { goto cLH2C; cLH2C: $visitor = DB::table("\164\x76\151\x73\x69\x74\157\x72\x73\40\141\x73\x20\x61")->select([DB::raw("\104\x41\131\50\144\x61\x74\x65\51\40\141\163\40\x64\x61\x79"), DB::raw("\103\117\x55\116\124\x28\x44\x49\x53\x54\x49\x4e\x43\x54\40\141\x2e\151\x64\51\40\141\163\x20\x76\151\163\151\164\x6f\x72")])->join("\x74\x63\154\151\x65\156\164\40\141\163\40\142", function ($join) { $join->on("\x61\56\x63\154\x69\145\156\164\x5f\151\144", "\75", "\x62\56\x63\x6c\151\x65\x6e\164\137\151\x64"); })->whereRaw("\x44\x41\124\105\x5f\x46\117\122\115\x41\x54\50\141\x2e\x64\141\164\x65\x2c\x20\47\x25\131\55\45\x6d\47\x29\x20\x3d\40\47{$request->date}\x27")->whereIn("\x61\x2e\x63\154\x69\x65\x6e\164\x5f\151\x64", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\x62\x2e\x70\162\x6f\x76\x69\x6e\163\x69\137\x69\144", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\x62\56\153\x61\142\165\x70\x61\164\x65\x6e\x5f\151\x64", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\x62\x2e\x69\156\x73\164\141\x6e\x73\x69\137\156\141\x6d\x65", $request->wl); })->groupBy(DB::raw("\x44\x41\x59\50\144\x61\164\x65\51"))->get(); goto vxTi5; joREJ: return $result; goto Czyzo; vxTi5: $result = collect($days)->map(function ($day) use($visitor) { $existingDay = $visitor->firstWhere("\x64\x61\171", $day); return ["\144\141\171" => $day, "\x64\141\164\x61" => $existingDay ? $existingDay->visitor : 0]; }); goto joREJ; Czyzo: } private function ReadMonthly($request, $months, $client_id) { goto oOKnP; d4nP4: $result = collect($months["\x6d\x6f\156\x74\x68"])->map(function ($month) use($reader) { $existingMonth = $reader->firstWhere("\x6d\157\x6e\164\x68", $month); return ["\155\157\x6e\164\150" => $month, "\x64\141\x74\141" => $existingMonth ? $existingMonth->reader : 0]; }); goto wX4BI; KvUR0: $reader = DB::table("\164\x74\162\170\137\162\x65\141\x64\x20\x61\x73\40\x61")->select([DB::raw("\x44\101\x54\105\137\106\117\x52\115\x41\124\50\x61\56\163\x74\141\162\164\x5f\x72\x65\141\x64\54\40\x27\45\x59\55\45\x6d\47\x29\x20\x61\x73\x20\x6d\x6f\x6e\x74\x68"), DB::raw("\x43\117\x55\x4e\x54\50\104\x49\123\x54\111\x4e\x43\x54\x20\x61\x2e\x62\157\x6f\153\x5f\x69\144\51\40\x61\163\x20\162\145\x61\144\145\162")])->join("\x74\143\154\151\x65\156\164\40\x61\x73\40\142", function ($join) { $join->on("\x61\56\143\x6c\x69\x65\x6e\x74\137\x69\144", "\75", "\142\x2e\143\154\x69\145\x6e\164\137\x69\144"); })->whereRaw("\104\x41\124\x45\x5f\106\x4f\x52\115\101\x54\x28\141\56\163\x74\141\x72\164\x5f\x72\145\x61\144\x2c\x20\x27\x25\x59\55\x25\x6d\47\51\40\x49\x4e\40\50\47{$month}\47\x29")->whereIn("\x61\x2e\x63\x6c\151\x65\x6e\x74\137\x69\x64", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\x62\56\160\x72\157\x76\x69\156\163\151\x5f\151\144", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\142\56\x6b\141\x62\165\160\x61\x74\x65\x6e\x5f\x69\144", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\142\x2e\151\156\x73\x74\x61\x6e\163\x69\x5f\x6e\x61\155\145", $request->wl); })->groupBy(DB::raw("\104\101\124\x45\x5f\106\x4f\x52\115\101\x54\x28\x73\x74\141\162\x74\137\162\x65\141\144\54\x20\x27\x25\x59\x2d\x25\x6d\x27\51"))->get(); goto d4nP4; wX4BI: return $result; goto mpbbL; oOKnP: $month = implode("\47\x2c\40\x27", $months["\155\x6f\156\164\x68"]); goto KvUR0; mpbbL: } private function VisitMonthly($request, $months, $client_id) { goto pjn2s; pjn2s: $month = implode("\x27\54\40\47", $months["\155\157\156\x74\150"]); goto I68ij; XPn21: $result = collect($months["\155\157\x6e\164\150"])->map(function ($month) use($visitor) { $existingMonth = $visitor->firstWhere("\x6d\x6f\156\164\x68", $month); return ["\x6d\157\156\x74\150" => $month, "\x64\141\x74\x61" => $existingMonth ? $existingMonth->visitor : 0]; }); goto ycYsn; ycYsn: return $result; goto yMrKQ; I68ij: $visitor = DB::table("\x74\166\151\163\151\x74\x6f\162\x73\40\x61\x73\40\141")->select([DB::raw("\104\101\x54\105\137\106\x4f\x52\115\101\x54\x28\x61\x2e\144\x61\x74\145\x2c\x20\x27\x25\x59\55\45\155\47\x29\x20\141\163\40\155\x6f\156\x74\150"), DB::raw("\x43\x4f\x55\116\x54\50\104\x49\123\x54\x49\116\x43\x54\40\141\56\151\x64\51\x20\141\x73\40\x76\x69\163\x69\x74\x6f\162")])->join("\164\x63\154\x69\x65\x6e\164\x20\141\163\40\142", function ($join) { $join->on("\141\56\x63\154\151\x65\x6e\164\137\x69\144", "\x3d", "\142\56\x63\x6c\x69\x65\156\164\x5f\x69\x64"); })->whereRaw("\x44\101\124\105\137\x46\x4f\122\115\x41\x54\x28\141\x2e\144\x61\164\145\54\40\x27\x25\131\x2d\x25\x6d\x27\51\x20\x49\116\x20\50\x27{$month}\x27\51")->whereIn("\141\x2e\143\154\x69\145\x6e\164\x5f\151\144", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\142\x2e\x70\x72\x6f\x76\151\156\163\x69\x5f\151\x64", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\142\x2e\x6b\x61\142\x75\x70\x61\x74\x65\x6e\x5f\x69\x64", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\142\x2e\x69\x6e\x73\x74\x61\156\163\151\137\156\x61\x6d\x65", $request->wl); })->groupBy(DB::raw("\x44\x41\x54\x45\137\106\x4f\x52\115\101\x54\50\x64\x61\x74\145\x2c\40\x27\45\x59\x2d\45\155\x27\x29"))->get(); goto XPn21; yMrKQ: } private function GrowthMember($request, $months, $client_id) { goto uOtkJ; ePCQ7: $visitor = DB::table("\x75\x73\x65\x72\x73\40\141\163\x20\141")->select([DB::raw("\104\101\x54\105\137\106\117\x52\115\x41\124\50\141\x2e\x63\162\145\x61\164\145\x64\x5f\141\164\54\x20\47\45\131\55\x25\155\x27\51\x20\x61\163\40\155\157\156\x74\x68"), DB::raw("\x43\117\125\116\124\x28\104\x49\x53\x54\111\116\103\x54\40\141\x2e\x69\x64\x29\40\x61\x73\x20\x76\151\x73\x69\x74\x6f\162")])->join("\164\143\154\151\145\x6e\x74\40\141\x73\40\x62", function ($join) { $join->on("\141\56\x63\154\x69\x65\x6e\x74\137\151\x64", "\x3d", "\142\x2e\x63\154\x69\x65\156\x74\137\151\x64"); })->whereRaw("\104\x41\x54\105\137\106\x4f\122\115\x41\x54\x28\x61\56\143\162\145\x61\x74\x65\x64\137\141\x74\x2c\x20\47\45\x59\55\x25\x6d\47\x29\40\x49\116\x20\50\x27{$month}\x27\51")->whereIn("\x61\x2e\143\154\x69\145\156\164\137\151\144", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\142\56\160\x72\157\166\151\x6e\163\x69\x5f\151\x64", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\142\56\x6b\141\x62\x75\x70\x61\164\145\x6e\137\151\x64", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\142\56\x69\x6e\163\164\x61\x6e\x73\x69\137\156\141\x6d\145", $request->wl); })->groupBy(DB::raw("\x44\101\124\105\x5f\x46\x4f\122\x4d\x41\x54\x28\141\56\x63\162\145\141\x74\x65\144\x5f\x61\164\54\x20\47\x25\131\55\45\155\x27\51"))->get(); goto DRhmn; uOtkJ: $month = implode("\x27\54\x20\x27", $months["\155\157\156\x74\150"]); goto ePCQ7; pIjco: return $result; goto A2fpQ; DRhmn: $result = collect($months["\155\157\x6e\164\150"])->map(function ($month) use($visitor) { $existingMonth = $visitor->firstWhere("\155\157\156\x74\150", $month); return ["\155\x6f\x6e\x74\150" => $month, "\144\x61\x74\x61" => $existingMonth ? $existingMonth->visitor : 0]; }); goto pIjco; A2fpQ: } private function TopMemberRead($request, $client_id) { $member = DB::table("\164\x74\x72\x78\137\162\x65\x61\144\x20\x61\x73\x20\141")->select(["\141\56\x75\163\145\x72\137\151\144", "\x63\x2e\156\x61\x6d\145", DB::raw("\x53\x45\x43\x5f\124\117\x5f\124\x49\115\105\x28\x53\125\115\50\x54\x49\x4d\105\x53\124\101\x4d\x50\x44\x49\106\106\50\123\105\x43\117\116\x44\x2c\x20\x73\164\141\162\164\x5f\x72\145\141\144\x2c\40\145\156\144\137\x72\145\141\x64\51\x29\51\40\x61\163\x20\x74\x6f\x74\141\x6c\x4a\x61\x6d")])->join("\x74\x63\x6c\x69\145\x6e\x74\40\141\163\40\x62", function ($join) { $join->on("\x61\x2e\143\x6c\x69\x65\156\x74\x5f\151\x64", "\x3d", "\142\x2e\x63\154\151\145\x6e\164\x5f\151\144"); })->join("\165\163\145\162\x73\40\141\163\x20\143", function ($join) { $join->on("\x61\x2e\x75\x73\x65\x72\137\x69\144", "\75", "\x63\x2e\151\144"); })->whereRaw("\104\x41\124\x45\x5f\106\x4f\122\115\x41\124\x28\141\x2e\143\x72\x65\x61\x74\145\x64\x5f\141\x74\x2c\40\x27\x25\x59\55\45\155\x27\x29\40\x3d\40\x27{$request->date}\47")->whereIn("\x61\x2e\143\154\151\145\156\x74\x5f\x69\144", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\142\x2e\160\162\157\166\151\x6e\x73\151\137\151\x64", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\x62\56\153\141\142\165\x70\x61\164\145\156\137\151\144", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\142\x2e\x69\x6e\x73\164\141\x6e\x73\x69\137\x6e\141\155\145", $request->wl); })->groupBy("\141\x2e\165\x73\x65\162\137\151\x64", "\x63\56\156\141\x6d\x65")->orderByRaw("\x53\105\x43\x5f\124\x4f\x5f\x54\111\115\x45\x28\x53\x55\x4d\50\x54\x49\x4d\x45\x53\124\x41\x4d\x50\x44\x49\106\106\x28\123\105\x43\117\116\x44\x2c\40\163\164\141\x72\x74\x5f\x72\x65\x61\x64\54\40\145\x6e\144\137\162\x65\141\x64\51\x29\x29\40\104\x45\x53\103")->limit(10)->get(); return $member; } private function TopBookRead($request, $client_id) { $book = DB::table("\164\164\162\x78\x5f\x72\x65\141\x64\40\x61\x73\x20\x61")->select(["\x61\x2e\x62\x6f\x6f\x6b\x5f\151\x64", "\143\56\164\151\164\154\x65", "\x63\56\x63\157\166\x65\162", DB::raw("\x43\x4f\x55\x4e\x54\x28\104\x49\x53\x54\111\116\103\x54\x20\141\56\x75\x73\x65\x72\x5f\x69\x64\51\40\x61\x73\40\x74\x6f\164\x61\x6c\122\x65\x61\x64")])->join("\x74\143\x6c\x69\x65\156\164\x20\x61\163\40\142", function ($join) { $join->on("\x61\x2e\x63\x6c\151\x65\x6e\164\x5f\x69\x64", "\75", "\142\x2e\x63\154\151\145\156\164\x5f\x69\144"); })->join("\x74\142\157\157\x6b\40\141\163\40\143", function ($join) { $join->on("\x61\56\x62\x6f\157\x6b\x5f\x69\x64", "\75", "\143\56\142\x6f\x6f\153\137\x69\x64"); })->whereRaw("\x44\101\124\105\137\x46\117\122\115\101\x54\50\141\56\163\164\141\162\164\137\x72\145\x61\144\54\x20\47\45\131\x2d\45\x6d\x27\x29\x20\x3d\x20\47{$request->date}\x27")->whereIn("\141\56\x63\x6c\151\x65\x6e\x74\137\x69\144", $client_id)->when($request->provinsi != '', function ($query) use($request) { $query->where("\x62\x2e\160\x72\x6f\166\x69\x6e\x73\151\137\151\x64", $request->provinsi); })->when($request->kabupaten != '', function ($query) use($request) { $query->where("\x62\56\x6b\141\142\x75\160\141\x74\145\156\137\151\144", $request->kabupaten); })->when($request->wl != '', function ($query) use($request) { $query->where("\142\56\151\x6e\163\x74\x61\156\x73\x69\137\156\x61\155\145", $request->wl); })->groupBy("\x61\56\142\157\157\x6b\x5f\151\144", "\143\x2e\x74\151\164\x6c\145", "\143\x2e\x63\157\166\x65\x72")->orderByRaw("\x43\x4f\x55\116\124\x28\104\x49\123\x54\111\x4e\x43\x54\40\141\x2e\165\163\145\162\137\x69\x64\x29\x20\104\105\x53\x43")->limit(10)->get()->map(function ($value) { return ["\x62\157\157\153\137\x69\x64" => $value->book_id, "\164\151\164\x6c\145" => $value->title, "\164\157\164\x61\x6c\x52\x65\141\x64" => $value->totalRead, "\x63\157\166\145\162" => isset($value->cover) && file_exists(public_path("\57\163\x74\x6f\162\x61\147\145\x2f\x63\157\x76\145\162\x73\57" . $value->cover)) ? "\57\x73\164\157\x72\141\147\x65\x2f\x63\157\166\145\x72\163\57" . $value->cover : "\x2f\x73\164\x6f\162\x61\x67\x65\x2f\143\157\x76\x65\162\x73\x2f\144\145\146\x61\165\154\x74\x2d\x63\x6f\x76\145\162\56\x6a\x70\147"]; }); return $book; } public function getKatalog(Request $request) { $results = DB::table("\164\x62\x6f\x6f\x6b\40\x61\x73\x20\x61")->select(["\x61\56\142\157\157\x6b\137\151\x64", "\141\56\164\151\x74\154\145", "\x61\x2e\143\157\166\x65\162\x20\141\163\x20\x69\x6d\141\147\x65", "\x61\x2e\167\x72\x69\164\145\162"])->orderBy("\x63\x72\145\141\164\145\x64\x61\164\145", "\x44\x45\123\103")->limit(10)->get()->map(function ($value) { return ["\164\151\164\x6c\145" => $value->title, "\151\155\x61\x67\145" => isset($value->image) && file_exists(public_path("\x2f\163\164\157\162\141\x67\145\x2f\143\157\166\145\162\163\x2f" . $value->image)) ? "\x2f\x73\x74\x6f\x72\141\147\x65\57\x63\157\x76\145\162\163\57" . $value->image : "\57\x73\x74\x6f\x72\141\x67\x65\x2f\143\157\166\145\162\x73\57\144\x65\x66\141\x75\154\164\55\143\157\166\145\x72\56\x6a\160\x67", "\167\x72\151\164\x65\x72" => $value->writer]; }); return response()->json($results, 200); } }
