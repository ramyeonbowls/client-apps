<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:14             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers\Core\Setting; use App\Logs; use Exception; use Throwable; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Http\JsonResponse; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Hash; use Illuminate\Support\Facades\Crypt; use Illuminate\Support\Facades\Storage; use App\Http\Requests\Setting\UpdateProfileMasterRequest; class ProfileMasterController extends Controller { protected $client_id = ''; protected $app_url = ''; public function __construct() { goto bF7jr; bF7jr: $this->middleware("\141\x75\x74\150"); goto iE4Ib; iE4Ib: $this->client_id = config("\x61\x70\160\56\143\x6c\151\x65\156\x74\137\151\144", ''); goto t84pO; t84pO: $this->app_url = config("\x61\160\160\56\165\x72\x6c", ''); goto N4mUK; N4mUK: } public function index(Request $request) { goto INS02; QYhup: return response()->json($results, 200); goto mB86G; YZSrX: nC6dp: goto wU9WY; QHpS7: $results = []; goto kCG82; lRM6a: return response()->json($results, 200); goto BSpc7; WaEvv: rDN0_: goto h8u7U; w9XsH: i4F1R: goto Gxmws; VEq6h: $sql = Str::replaceArray("\77", $queries[$q]["\x62\x69\x6e\x64\x69\x6e\x67\163"], str_replace("\x3f", "\x27\x3f\x27", $queries[$q]["\161\x75\145\162\171"])); goto GZlGp; QHKEu: $logs->write("\x53\121\114", $sql); goto YZSrX; Gxmws: if (!($q < count($queries))) { goto rDN0_; } goto VEq6h; cOxEw: $q = 0; goto w9XsH; bth3m: DB::enableQueryLog(); goto QHpS7; INS02: $user = auth()->user(); goto BSyMF; Vx_av: $queries = DB::getQueryLog(); goto cOxEw; HLHni: $results = DB::table("\x74\x63\154\x69\145\156\164\40\141\x73\40\x61")->select(["\x61\56\52", "\142\56\x70\x72\157\x76\151\x6e\163\151\137\x6e\141\x6d\145", "\143\56\x6b\141\x62\165\160\x61\x74\145\156\x5f\x6e\x61\x6d\x65", "\x64\x2e\x6b\x65\x63\141\155\x61\x74\141\156\x5f\156\x61\x6d\x65", "\145\x2e\x6b\x65\x6c\165\x72\x61\x68\141\x6e\x5f\x6e\x61\155\x65", DB::raw("\47" . $this->app_url . "\x27\40\141\x73\x20\x61\x70\160\x5f\165\162\x6c")])->join("\164\160\x72\x6f\166\151\156\x73\x69\40\x61\x73\x20\x62", "\141\x2e\160\162\157\166\151\x6e\x73\151\137\151\144", "\x3d", "\142\x2e\x70\x72\x6f\x76\x69\x6e\163\151\137\151\144")->join("\x74\x6b\141\x62\165\160\x61\164\145\x6e\40\x61\163\x20\x63", "\x61\x2e\x6b\x61\x62\165\x70\x61\x74\x65\x6e\137\151\x64", "\75", "\x63\x2e\x6b\141\x62\165\x70\141\164\145\156\137\x69\144")->join("\x74\153\145\143\x61\155\x61\x74\x61\x6e\x20\x61\x73\x20\x64", "\x61\x2e\153\145\143\141\155\x61\x74\x61\x6e\137\x69\144", "\75", "\144\56\153\145\143\x61\155\141\x74\141\156\x5f\x69\x64")->join("\x74\x6b\145\154\x75\x72\x61\150\x61\x6e\x20\x61\x73\x20\x65", "\141\x2e\x6b\x65\x6c\x75\x72\x61\x68\x61\x6e\x5f\x69\x64", "\75", "\x65\56\153\x65\154\x75\162\141\150\x61\156\137\151\144")->where("\141\x2e\143\x6c\x69\x65\x6e\x74\137\x69\x64", $this->client_id)->first(); goto Vx_av; h8u7U: $logs->write(__FUNCTION__, "\x53\x54\x4f\120\xd\12"); goto lRM6a; GZlGp: $logs->write("\x42\111\x4e\104\111\x4e\107", "\x5b" . implode("\54\40", $queries[$q]["\x62\151\x6e\x64\x69\156\x67\x73"]) . "\135"); goto QHKEu; kCG82: if (!($user && $user->role == "\141\x64\x6d\151\156")) { goto R9QFq; } goto HLHni; BSpc7: R9QFq: goto QYhup; BSyMF: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\157\x67"); goto Suzn7; ZM6iS: goto i4F1R; goto WaEvv; wU9WY: $q++; goto ZM6iS; Suzn7: $logs->write(__FUNCTION__, "\x53\124\x41\x52\124"); goto bth3m; mB86G: } public function store(UpdateProfileMasterRequest $request) : JsonResponse { goto GqL0f; AlHZu: $logs->write(__FUNCTION__, "\123\x54\x41\122\x54"); goto Dgz10; GqL0f: $user = auth()->user(); goto iL4re; YNoP3: $result["\x6d\145\163\163\141\x67\x65"] = ''; goto i22bT; Dgz10: $result["\163\x74\x61\164\x75\163"] = 200; goto YNoP3; i22bT: try { goto iLJNg; F6cTz: EB5GQ: goto hdwv2; Q7ZG2: Ncr02: goto xIxTz; toGxv: $logs->write("\123\x51\x4c", $queries[$q]["\x71\x75\x65\162\171"]); goto Ht7hK; wALI4: $created = DB::table("\164\x63\154\151\x65\156\x74")->where("\x63\x6c\151\x65\156\x74\137\x69\x64", $this->client_id)->update($updateData); goto Xg5FX; bVtLb: $user->update(["\160\x61\x73\x73\x77\157\x72\x64" => Hash::make($request->password)]); goto kEwTh; ANsig: $logs->write("\102\111\x4e\104\x49\x4e\x47", "\133" . implode("\54\x20", $queries[$q]["\142\x69\x6e\x64\151\x6e\x67\x73"]) . "\x5d"); goto toGxv; txRDi: if (!$request->has("\160\141\x73\x73\x77\157\x72\144")) { goto qKTtx; } goto bVtLb; jdI4S: try { goto WZf4n; RrWM5: $logo_name = "\x6c\x6f\x67\x6f\56" . $extension; goto BW4Vl; BW4Vl: $request->file("\154\x6f\x67\157")->move(public_path("\151\155\141\147\x65\x73\57\x6c\157\147\x6f"), $logo_name); goto jgv9F; WZf4n: $extension = $request->file("\154\157\147\x6f")->getClientOriginalExtension(); goto RrWM5; jgv9F: } catch (Throwable $th) { $logs->write("\x45\122\122\x4f\x52", $th->getMessage()); } goto RyCFM; LtGWa: if (!($q < count($queries))) { goto EB5GQ; } goto ANsig; RyCFM: PSwgx: goto WzqFC; scp2D: Gi74O: goto uH41y; UsqeS: if (!$request->hasFile("\x6c\157\x67\157")) { goto PSwgx; } goto jdI4S; cacdl: $result["\163\164\x61\164\x75\x73"] = 201; goto butly; Xg5FX: if (!$created) { goto Ncr02; } goto xXz3z; nOuTX: $q++; goto YjMXC; uH41y: $data = (object) $validated; goto GYBiu; xIxTz: $queries = DB::getQueryLog(); goto StDM6; WzqFC: if (!$request->hasFile("\x6c\157\147\x6f\x5f\x73\x6d\x61\x6c\154")) { goto Gi74O; } goto yuh0I; butly: $result["\x6d\x65\x73\163\x61\147\x65"] = "\123\x75\x63\x63\145\163\163\146\165\154\x6c\171\x20\x63\162\145\x61\164\145\144\x2e"; goto Q7ZG2; iLJNg: DB::enableQueryLog(); goto UsqeS; yuh0I: try { goto bmvpB; QXijO: $resizedImage = imagecreatetruecolor($newWidth, $newHeight); goto VdIvd; Ben3i: $newHeight = 200; goto QXijO; AzTqH: list($width, $height) = getimagesize($logoSmallPath); goto SuPZB; vq9Bi: imagedestroy($source); goto A0bsU; SuPZB: $newWidth = 200; goto Ben3i; PCsum: switch (strtolower($extension)) { case "\160\156\147": imagepng($resizedImage, $faviconPath); goto deU32; } goto Qq9aZ; VdIvd: switch (strtolower($extension)) { case "\160\156\x67": goto NCkfl; kNKkt: imagesavealpha($resizedImage, true); goto OeEaz; B8LWh: imagealphablending($resizedImage, false); goto kNKkt; NCkfl: $source = imagecreatefrompng(public_path("\x69\x6d\x61\x67\x65\x73\x2f\x6c\157\147\157\57" . $logo_small_name)); goto B8LWh; OeEaz: goto R1UUs; goto c40pk; c40pk: default: throw new Exception("\125\x6e\163\165\160\160\x6f\x72\x74\x65\x64\x20\x69\x6d\141\x67\x65\40\x66\157\162\x6d\x61\164\56"); } goto S_ovt; bmvpB: $extension = $request->file("\x6c\x6f\x67\x6f\137\x73\155\141\x6c\154")->getClientOriginalExtension(); goto leHEx; E91G4: imagecopyresampled($resizedImage, $source, 0, 0, 0, 0, $newWidth, $newHeight, $width, $height); goto BqqZz; leHEx: $logo_small_name = "\154\157\x67\157\x5f\x73\155\141\x6c\154\56" . $extension; goto or7ts; S_ovt: RjbWo: goto yNOcM; or7ts: $favicon_name = "\146\141\x76\x69\143\x6f\156\x2e" . $extension; goto FhBDb; FhBDb: $logoSmallPath = $request->file("\x6c\157\x67\x6f\137\x73\155\x61\x6c\x6c")->move(public_path("\151\155\x61\x67\x65\x73\57\x6c\157\x67\x6f"), $logo_small_name); goto AzTqH; Qq9aZ: jifE_: goto bNAHL; rxI0B: imagedestroy($resizedImage); goto vq9Bi; yNOcM: R1UUs: goto E91G4; bNAHL: deU32: goto rxI0B; BqqZz: $faviconPath = public_path("\x73\164\x6f\162\141\147\x65\x2f\151\155\x61\x67\145\x73\x2f\154\157\x67\157\57" . $favicon_name); goto PCsum; A0bsU: } catch (Throwable $th) { $logs->write("\105\x52\122\117\x52", $th->getMessage()); } goto scp2D; kEwTh: qKTtx: goto wALI4; xXz3z: $logs->write("\x49\116\106\x4f", "\x53\165\x63\143\145\163\163\146\x75\154\154\x79\x20\143\x72\x65\x61\164\145\x64"); goto cacdl; YjMXC: goto Gvb3I; goto F6cTz; Bb2c5: Gvb3I: goto LtGWa; GYBiu: $updateData = ["\141\160\x70\154\x69\143\141\x74\151\157\x6e\137\x6e\x61\x6d\x65" => $request->application_name, "\x61\144\144\x72\145\x73\x73" => $request->address, "\156\160\167\160" => $request->npwp, "\x61\144\x6d\151\x6e\x69\163\x74\162\141\164\157\162\137\x6e\141\x6d\x65" => $request->administrator_name, "\141\144\x6d\x69\x6e\x69\163\x74\162\x61\164\157\x72\137\x70\150\157\156\145" => $request->administrator_phone, "\x75\160\144\x61\x74\x65\144\137\x61\x74" => Carbon::now("\101\x73\151\141\x2f\x4a\x61\153\141\x72\164\141")]; goto txRDi; Ht7hK: DqoM4: goto nOuTX; StDM6: $q = 0; goto Bb2c5; hdwv2: } catch (Throwable $th) { $logs->write("\x45\122\122\x4f\x52", $th->getMessage()); $result["\x6d\145\x73\x73\x61\147\x65"] = "\x46\x61\x69\x6c\145\144\40\143\162\145\141\x74\x65\x64\56\74\x62\162\x3e" . $th->getMessage(); } goto J3D6D; G13TP: return response()->json($result["\x6d\x65\163\x73\141\x67\x65"], $result["\x73\164\141\164\x75\163"]); goto gHQgm; J3D6D: $logs->write(__FUNCTION__, "\x53\x54\117\x50\xd\xa"); goto G13TP; aRkVP: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\114\x6f\x67"); goto AlHZu; iL4re: $validated = $request->validated(); goto aRkVP; gHQgm: } public function show(string $id) : JsonResponse { goto HVOvj; YO1vU: switch (request()->param) { case "\160\162\x6f\x76\x69\x6e\x73\x69\x2d\155\163\x74": goto BZRBQ; BZRBQ: DB::enableQueryLog(); goto ea36s; qQRNR: KWh7W: goto QW2hY; UuOTa: $logs->write("\123\121\114", $sql); goto qQRNR; lj5Tj: return response()->json($results, 200); goto V1SVu; Wlrxf: $q = 0; goto NXZR6; QW2hY: $q++; goto d1dr6; l4CPH: $results = $provinsi->map(function ($value, $key) { return ["\x69\144" => $value->id, "\156\x61\x6d\145" => $value->name]; }); goto rM0dG; ea36s: $provinsi = DB::table("\164\x70\x72\157\x76\x69\x6e\163\151\x20\141\163\40\141")->sharedLock()->select("\x61\56\x70\x72\x6f\x76\x69\x6e\x73\151\137\151\x64\40\141\x73\x20\151\x64", "\141\x2e\x70\162\157\x76\151\x6e\x73\151\x5f\156\141\155\145\40\141\x73\40\156\141\155\145")->get(); goto rK0FV; rM0dG: PZsF4: goto lj5Tj; sRJTs: if (!($q < count($queries))) { goto UFvUk; } goto yFa79; yFa79: $sql = Str::replaceArray("\77", $queries[$q]["\142\151\156\144\x69\x6e\147\163"], str_replace("\77", "\47\77\47", $queries[$q]["\161\x75\145\x72\x79"])); goto iT2ex; Hwacd: $results = []; goto jpW88; d1dr6: goto gIS33; goto YevDP; jpW88: if (!$provinsi) { goto PZsF4; } goto l4CPH; iT2ex: $logs->write("\x42\111\116\104\111\116\x47", "\x5b" . implode("\x2c\x20", $queries[$q]["\x62\151\156\144\151\x6e\x67\163"]) . "\135"); goto UuOTa; rK0FV: $queries = DB::getQueryLog(); goto Wlrxf; NXZR6: gIS33: goto sRJTs; V1SVu: goto aDIaf; goto H5cUf; YevDP: UFvUk: goto Hwacd; H5cUf: case "\153\x61\142\x75\x70\x61\164\x65\x6e\x2d\x6d\x73\x74": goto NspbA; NspbA: DB::enableQueryLog(); goto o3Wtu; WgwEg: goto aDIaf; goto vU5F7; o3Wtu: $provinsi = request()->provinsi ?? ''; goto FTuRm; m8DbZ: UeBs4: goto fN25p; d4HUL: $results = []; goto fkM9p; FTuRm: $kabupaten = DB::table("\x74\153\x61\142\165\160\x61\164\145\156\x20\x61\x73\40\x61")->sharedLock()->select("\x61\56\153\141\142\x75\160\141\x74\x65\156\137\x69\144\40\x61\163\x20\151\144", "\x61\56\153\141\142\165\x70\x61\164\145\x6e\x5f\156\x61\x6d\x65\40\141\x73\40\156\x61\155\145")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\141\56\160\x72\x6f\x76\151\x6e\163\x69\137\x69\144", $provinsi); })->get(); goto oQ8JM; Aru2W: fxU5Q: goto ybnHI; fkM9p: if (!$kabupaten) { goto fxU5Q; } goto m49EG; fN25p: if (!($q < count($queries))) { goto BXUCm; } goto wcVuq; oQ8JM: $queries = DB::getQueryLog(); goto KaThz; XYs31: BXUCm: goto d4HUL; ZYAWS: $logs->write("\x53\x51\x4c", $sql); goto E_8ne; h91pp: $logs->write("\102\x49\x4e\x44\111\x4e\x47", "\x5b" . implode("\54\40", $queries[$q]["\x62\151\156\144\151\x6e\147\x73"]) . "\x5d"); goto ZYAWS; m49EG: $results = $kabupaten->map(function ($value, $key) { return ["\151\x64" => $value->id, "\x6e\x61\x6d\145" => $value->name]; }); goto Aru2W; NRf3d: $q++; goto iiI03; wcVuq: $sql = Str::replaceArray("\77", $queries[$q]["\x62\x69\x6e\x64\151\x6e\147\163"], str_replace("\x3f", "\47\77\x27", $queries[$q]["\161\x75\145\162\171"])); goto h91pp; E_8ne: aizY5: goto NRf3d; KaThz: $q = 0; goto m8DbZ; iiI03: goto UeBs4; goto XYs31; ybnHI: return response()->json($results, 200); goto WgwEg; vU5F7: case "\153\x65\x63\141\x6d\141\x74\141\156\55\155\163\x74": goto ff58k; EAZT3: if (!$kecamatan) { goto lo2jC; } goto muec7; aEOoP: J1wRP: goto xqSJp; tP_Hg: if (!($q < count($queries))) { goto J1wRP; } goto RsNhk; EPYMf: $kabupaten = request()->kabupaten ?? ''; goto UHWa8; J7NxK: $q = 0; goto whA4J; eXpQg: $q++; goto JLXSA; xqSJp: $results = []; goto EAZT3; XsgXH: $logs->write("\123\121\114", $sql); goto DG8AE; DRU9N: lo2jC: goto hFylh; hFylh: return response()->json($results, 200); goto O8BT7; f8It4: $provinsi = request()->provinsi ?? ''; goto EPYMf; O8BT7: goto aDIaf; goto ONewY; UHWa8: $kecamatan = DB::table("\164\x6b\x65\x63\141\155\141\x74\141\x6e\x20\141\163\x20\x61")->sharedLock()->select("\x61\x2e\x6b\x65\143\141\155\141\164\x61\x6e\137\x69\x64\40\x61\163\x20\x69\144", "\x61\x2e\153\145\x63\x61\155\141\164\141\x6e\x5f\156\141\x6d\145\x20\x61\163\40\156\x61\x6d\145")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\x2e\x70\x72\x6f\x76\151\156\163\x69\137\x69\144", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\x61\x2e\x6b\x61\142\165\x70\x61\164\x65\x6e\137\x69\144", $kabupaten); })->get(); goto YlyHr; ff58k: DB::enableQueryLog(); goto f8It4; YlyHr: $queries = DB::getQueryLog(); goto J7NxK; whA4J: NpDFH: goto tP_Hg; RsNhk: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\156\144\151\156\x67\x73"], str_replace("\77", "\x27\x3f\x27", $queries[$q]["\161\165\x65\162\171"])); goto uQPiW; uQPiW: $logs->write("\x42\x49\x4e\x44\111\x4e\x47", "\x5b" . implode("\x2c\x20", $queries[$q]["\142\151\x6e\144\151\156\x67\x73"]) . "\x5d"); goto XsgXH; DG8AE: ovVQe: goto eXpQg; JLXSA: goto NpDFH; goto aEOoP; muec7: $results = $kecamatan->map(function ($value, $key) { return ["\x69\144" => $value->id, "\156\141\x6d\x65" => $value->name]; }); goto DRU9N; ONewY: case "\153\145\154\165\x72\x61\x68\x61\156\55\155\163\164": goto sa0n1; otwQk: zFfSO: goto hR2Fy; jlYBf: if (!$kelurahan) { goto zFfSO; } goto Bor5b; hR2Fy: return response()->json($results, 200); goto AKGBm; MUSAm: $logs->write("\102\111\x4e\104\111\x4e\x47", "\133" . implode("\x2c\40", $queries[$q]["\x62\151\x6e\x64\151\x6e\147\163"]) . "\x5d"); goto d6WqW; iyF5_: goto LImVn; goto BSdA1; Bor5b: $results = $kelurahan->map(function ($value, $key) { return ["\151\144" => $value->id, "\x6e\141\x6d\145" => $value->name]; }); goto otwQk; vVIEp: $q = 0; goto k35AT; nt6lR: $queries = DB::getQueryLog(); goto vVIEp; W546e: if (!($q < count($queries))) { goto ODM7v; } goto BnyOZ; BnyOZ: $sql = Str::replaceArray("\77", $queries[$q]["\x62\x69\x6e\x64\151\x6e\x67\163"], str_replace("\x3f", "\47\x3f\x27", $queries[$q]["\x71\165\145\x72\x79"])); goto MUSAm; WbBv2: $results = []; goto jlYBf; Z_fiC: $kecamatan = request()->kecamatan ?? ''; goto NB934; gLzuH: sacv3: goto KxTv5; d6WqW: $logs->write("\123\121\x4c", $sql); goto gLzuH; sa0n1: DB::enableQueryLog(); goto N2S2O; NB934: $kelurahan = DB::table("\x74\153\x65\154\165\x72\x61\x68\141\x6e\x20\141\163\x20\x61")->sharedLock()->select("\141\x2e\153\145\154\165\x72\x61\150\x61\x6e\x5f\151\x64\40\141\163\40\151\144", "\141\x2e\153\145\x6c\165\162\x61\150\141\x6e\x5f\156\x61\155\145\x20\x61\163\40\x6e\x61\x6d\x65")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\x2e\x70\162\157\166\x69\x6e\x73\x69\x5f\x69\x64", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\141\x2e\x6b\x61\x62\165\160\x61\x74\145\x6e\137\x69\144", $kabupaten); })->when(isset($kecamatan) && $kecamatan != '', function ($query) use($kecamatan) { $query->where("\x61\x2e\153\x65\x63\x61\155\x61\x74\x61\156\x5f\x69\x64", $kecamatan); })->get(); goto nt6lR; N2S2O: $provinsi = request()->provinsi ?? ''; goto XqhVo; BSdA1: ODM7v: goto WbBv2; k35AT: LImVn: goto W546e; XqhVo: $kabupaten = request()->kabupaten ?? ''; goto Z_fiC; KxTv5: $q++; goto iyF5_; AKGBm: goto aDIaf; goto Lk1Cj; Lk1Cj: case "\x6b\x61\164\x65\x67\157\162\151\55\155\163\x74": goto p9Zd0; uAAD2: $logs->write("\x42\x49\x4e\x44\111\x4e\x47", "\133" . implode("\54\x20", $queries[$q]["\x62\x69\x6e\x64\x69\156\147\x73"]) . "\x5d"); goto NZQvK; tv773: goto qgKgX; goto f3E2I; oKxQu: if (!($q < count($queries))) { goto pTARy; } goto x9z6A; f3E2I: pTARy: goto BDGfo; Qzo57: OHRiH: goto gH8o9; FHifZ: $results = $ketegori->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\156\141\x6d\145" => $value->name]; }); goto Qzo57; Rvnyz: qgKgX: goto oKxQu; QtOGa: goto aDIaf; goto vqHL_; WPIe8: BjZPG: goto j0o6r; gH8o9: return response()->json($results, 200); goto QtOGa; NZQvK: $logs->write("\x53\x51\114", $sql); goto WPIe8; k9fps: $ketegori = DB::table("\x74\142\157\x6f\x6b\x5f\143\x61\164\x65\x67\157\162\x79\x20\x61\x73\40\141")->sharedLock()->select("\141\x2e\151\144\40\141\x73\x20\151\144", "\141\x2e\x64\x65\x73\x63\162\151\x70\x74\x69\157\x6e\x20\x61\163\x20\156\141\155\145")->get(); goto x5iaf; j0o6r: $q++; goto tv773; x5iaf: $queries = DB::getQueryLog(); goto YwXgH; QK9RZ: if (!$ketegori) { goto OHRiH; } goto FHifZ; x9z6A: $sql = Str::replaceArray("\x3f", $queries[$q]["\142\151\x6e\x64\151\x6e\147\163"], str_replace("\77", "\x27\x3f\47", $queries[$q]["\161\165\x65\162\171"])); goto uAAD2; YwXgH: $q = 0; goto Rvnyz; p9Zd0: DB::enableQueryLog(); goto k9fps; BDGfo: $results = []; goto QK9RZ; vqHL_: default: return response()->json(request()->param, 200); goto aDIaf; } goto MjxCw; HVOvj: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\x6f\147"); goto r4PIm; OJ3OA: xbmRl: goto mY9AW; MjxCw: KTc90: goto D1oro; r4PIm: if (!(request()->has("\160\x61\162\x61\x6d") && request()->param != '')) { goto xbmRl; } goto YO1vU; D1oro: aDIaf: goto OJ3OA; mY9AW: } public function update(Request $request, string $id) : JsonResponse { return response()->json($request, 200); } public function destroy(string $id) : JsonResponse { return response()->json($id, 200); } public function exportPDF(Request $request) { goto lTBXZ; g1VZd: $logs->write(__FUNCTION__, "\x53\124\x4f\120\15\xa"); goto Ly1FS; lTBXZ: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\114\157\x67"); goto GlbLn; XXe_L: return view("\160\144\146\x2e\x61\147\x72\145\x65\x6d\x65\156\164\137\x6c\x65\164\164\145\x72"); goto g1VZd; GlbLn: $logs->write(__FUNCTION__, "\123\x54\x41\x52\124"); goto XXe_L; Ly1FS: } }
