<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:14             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers\Core\Setting; use App\Logs; use Exception; use Throwable; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Http\JsonResponse; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Hash; use Illuminate\Support\Facades\Crypt; use Illuminate\Support\Facades\Storage; use Illuminate\Support\Facades\Validator; class ProfileTeacherMasterController extends Controller { protected $client_id = ''; protected $app_url = ''; public function __construct() { goto khaLS; pUqBs: $this->client_id = config("\141\x70\x70\x2e\x63\154\x69\145\156\x74\x5f\151\x64", ''); goto VHITI; VHITI: $this->app_url = config("\141\x70\160\56\x75\x72\154", ''); goto ZS70k; khaLS: $this->middleware("\141\165\x74\x68"); goto pUqBs; ZS70k: } public function index(Request $request) { goto aN40t; H0jLf: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\114\157\147"); goto NIiCz; aN40t: $user = auth()->user(); goto H0jLf; eDHrq: $q = 0; goto MyL22; gZRsP: goto DremA; goto B8uLL; x2STK: $sql = Str::replaceArray("\77", $queries[$q]["\142\151\156\144\151\156\x67\x73"], str_replace("\x3f", "\x27\77\x27", $queries[$q]["\x71\x75\x65\162\171"])); goto zzlOY; B8uLL: SJvoy: goto SqXOJ; zzlOY: $logs->write("\102\111\116\x44\x49\x4e\107", "\x5b" . implode("\x2c\x20", $queries[$q]["\x62\x69\156\144\x69\x6e\x67\163"]) . "\135"); goto MYaSB; IkW_4: Fs92D: goto unxDE; MyL22: DremA: goto qvABt; pINi8: b8CGv: goto GfiPU; gFQWe: $results = []; goto D_stX; D_stX: if (!($user && $user->role == "\x74\x65\141\x63\150\145\162")) { goto b8CGv; } goto ORd4X; GfiPU: return response()->json($results, 200); goto QfdsA; qvABt: if (!($q < count($queries))) { goto SJvoy; } goto x2STK; NIiCz: $logs->write(__FUNCTION__, "\123\x54\x41\x52\x54"); goto VZiG8; unxDE: $q++; goto gZRsP; aWuPh: $queries = DB::getQueryLog(); goto eDHrq; MYaSB: $logs->write("\x53\121\x4c", $sql); goto IkW_4; VZiG8: DB::enableQueryLog(); goto gFQWe; ORd4X: $results = DB::table("\165\x73\145\162\163\40\x61\x73\x20\x61")->select(["\x61\56\x69\x64", "\x61\56\x65\x6d\x61\151\154", "\141\x2e\x6e\141\155\145", "\160\x68\157\156\x65", "\x67\x65\x6e\144\145\162", "\x62\x69\162\164\x68\144\141\171", "\156\151\153"])->join("\164\x61\164\164\162\137\155\x65\155\x62\x65\x72\40\x61\163\40\x62", function ($join) { $join->on("\x61\x2e\x69\144", "\x3d", "\x62\x2e\x69\144"); })->where("\x61\x2e\143\x6c\x69\x65\x6e\x74\137\x69\144", $this->client_id)->where("\x61\x2e\x69\144", $user->id)->first(); goto aWuPh; IlpP8: return response()->json($results, 200); goto pINi8; SqXOJ: $logs->write(__FUNCTION__, "\x53\124\117\120\15\12"); goto IlpP8; QfdsA: } public function store(Request $request) : JsonResponse { goto KeeuE; j560u: return response()->json($result["\155\x65\163\x73\141\147\x65"], $result["\163\x74\141\164\x75\x73"]); goto cHJmP; fUL83: $result["\x6d\145\x73\x73\141\x67\145"] = ''; goto oPonX; KeeuE: $user = auth()->user(); goto XQnCT; B083P: $logs->write(__FUNCTION__, "\123\124\117\120\15\xa"); goto j560u; oPonX: try { goto yns6y; vE1oN: $logs->write("\123\121\114", $queries[$q]["\161\165\145\x72\171"]); goto gRrgg; R_nhg: pGqTD: goto v_6QB; z1NC7: $result["\163\x74\x61\164\165\163"] = 201; goto InrDS; gAF7m: rV8pr: goto z2N66; z2N66: if ($request->has("\x70\x61\x73\163\167\x6f\x72\144")) { goto pGqTD; } goto O3pp_; k9Co0: goto q0dyn; goto R_nhg; iHq8m: Crecq: goto brhkF; TuoB1: $queries = DB::getQueryLog(); goto ERFkQ; xFbNx: $validator = Validator::make($request->all(), ["\156\x61\155\x65" => ["\x72\145\161\165\x69\x72\x65\x64", "\x73\164\x72\x69\x6e\147", "\x6d\x61\x78\72\x32\65\x35"], "\x65\155\x61\151\154" => ["\162\145\x71\x75\x69\162\145\x64", "\x73\x74\x72\151\x6e\x67", "\145\155\141\x69\x6c", "\x6d\141\170\x3a\62\x35\x35", "\x75\x6e\151\161\165\145\72\x75\163\x65\x72\x73\x2c\x65\155\x61\151\x6c\54" . $user->id], "\x6e\x69\153" => "\x6e\x75\154\x6c\x61\x62\x6c\145\x7c\x73\x74\x72\151\x6e\147\x7c\155\x61\170\x3a\x32\60", "\160\x68\x6f\156\145" => "\x72\x65\161\165\151\162\x65\x64\174\163\x74\162\151\x6e\x67\x7c\155\141\x78\72\x31\65", "\142\151\x72\164\150\x64\141\171" => "\x72\x65\161\x75\151\162\145\x64\174\144\141\x74\x65", "\x67\x65\x6e\144\x65\x72" => "\x72\145\161\165\151\162\x65\144\x7c\x73\x74\x72\151\x6e\x67\x7c\151\x6e\x3a\114\54\x50", "\x70\141\163\x73\x77\x6f\x72\x64" => ["\x72\145\x71\165\151\162\x65\144", "\163\x74\162\151\156\147", "\x6d\x69\x6e\72\70"]]); goto oGa5v; brhkF: if (!($q < count($queries))) { goto bHqiV; } goto S2iae; gRrgg: C8jmG: goto lIPfB; ERFkQ: $q = 0; goto iHq8m; yns6y: DB::enableQueryLog(); goto xFbNx; InrDS: $result["\155\145\x73\x73\141\147\x65"] = "\x42\x65\162\x68\141\163\151\154\40\x55\160\x64\x61\164\x65\x20\104\141\x74\141\x2e"; goto LB96D; lIPfB: $q++; goto IiQno; rDVon: q0dyn: goto TuoB1; oGa5v: if (!$validator->fails()) { goto rV8pr; } goto LeXh3; IiQno: goto Crecq; goto pqFJd; O3pp_: $result["\x73\164\141\164\165\x73"] = 201; goto IL7J4; LeXh3: return response()->json(["\x65\x72\x72\157\x72\163" => $validator->errors()], 400); goto gAF7m; LB96D: b9ywh: goto rDVon; tPFTn: $logs->write("\111\116\x46\117", "\x42\145\162\150\141\163\x69\154\40\125\x70\144\x61\x74\145\x20\104\141\164\141\x2e"); goto z1NC7; v_6QB: if (!$user->update(["\x70\x61\163\163\167\157\162\144" => Hash::make($request->password)])) { goto b9ywh; } goto tPFTn; S2iae: $logs->write("\102\111\x4e\x44\111\x4e\107", "\133" . implode("\54\x20", $queries[$q]["\142\151\156\x64\x69\156\x67\x73"]) . "\x5d"); goto vE1oN; IL7J4: $result["\155\145\163\163\x61\x67\x65"] = "\x54\x69\x64\x61\x6b\x20\x41\144\141\x20\104\141\x74\141\40\131\141\x6e\x67\40\104\151\x20\x55\160\144\141\x74\145\56"; goto k9Co0; pqFJd: bHqiV: goto P8qho; P8qho: } catch (Throwable $th) { $logs->write("\x45\122\122\x4f\x52", $th->getMessage()); $result["\x6d\x65\x73\x73\141\x67\145"] = "\x47\141\147\x61\154\x20\x55\x70\144\141\x74\145\40\x44\141\164\x61\x2e\x3c\x62\x72\x3e" . $th->getMessage(); } goto B083P; XQnCT: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\114\x6f\x67"); goto KAviI; YWL9X: $result["\x73\164\141\x74\x75\163"] = 200; goto fUL83; KAviI: $logs->write(__FUNCTION__, "\123\x54\101\122\124"); goto YWL9X; cHJmP: } public function show(string $id) : JsonResponse { goto FyXzp; cCyEn: C1E4w: goto ks_47; MQE4V: switch (request()->param) { case "\160\162\157\166\151\156\163\x69\55\155\x73\x74": goto n044L; LrrJ6: return response()->json($results, 200); goto GC8rp; Cxtxf: $queries = DB::getQueryLog(); goto Yr6ht; QPUei: goto FEgaF; goto lcZjN; JR_k3: $sql = Str::replaceArray("\x3f", $queries[$q]["\142\x69\x6e\144\x69\x6e\147\x73"], str_replace("\x3f", "\x27\x3f\47", $queries[$q]["\161\x75\x65\162\171"])); goto M5rIh; M5rIh: $logs->write("\102\111\116\104\111\116\107", "\x5b" . implode("\x2c\40", $queries[$q]["\x62\x69\x6e\144\x69\x6e\x67\x73"]) . "\x5d"); goto xGojr; GC8rp: goto EjMTD; goto axZZ2; ldAWN: if (!$provinsi) { goto s8Bxe; } goto u6ZAy; uf5He: FEgaF: goto vPoAD; SUv3u: $provinsi = DB::table("\x74\x70\x72\x6f\166\x69\x6e\163\151\x20\141\x73\40\141")->sharedLock()->select("\141\x2e\x70\x72\157\x76\151\156\x73\x69\137\x69\x64\40\141\163\x20\151\144", "\141\56\160\x72\x6f\166\151\x6e\x73\151\137\156\x61\x6d\x65\40\141\x73\x20\156\141\155\145")->get(); goto Cxtxf; vPoAD: if (!($q < count($queries))) { goto nq1UV; } goto JR_k3; xGojr: $logs->write("\123\x51\x4c", $sql); goto mUOSr; gH4rV: $q++; goto QPUei; OUH8K: $results = []; goto ldAWN; u6ZAy: $results = $provinsi->map(function ($value, $key) { return ["\151\x64" => $value->id, "\156\x61\x6d\145" => $value->name]; }); goto zRP06; mUOSr: tPQWb: goto gH4rV; n044L: DB::enableQueryLog(); goto SUv3u; zRP06: s8Bxe: goto LrrJ6; Yr6ht: $q = 0; goto uf5He; lcZjN: nq1UV: goto OUH8K; axZZ2: case "\153\141\x62\165\160\141\x74\145\156\x2d\x6d\163\x74": goto ltqbK; Lo862: $provinsi = request()->provinsi ?? ''; goto C4IHO; ikOhp: v0xVL: goto fQF7y; z4egf: Oa3q3: goto TAHhG; qs7bv: $q++; goto T5hU9; h9i7w: q0X4e: goto TtOFc; ltqbK: DB::enableQueryLog(); goto Lo862; A2JNU: $queries = DB::getQueryLog(); goto pVUwI; aB8oh: goto EjMTD; goto MqZXa; W1lRX: $results = $kabupaten->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\x6e\x61\155\x65" => $value->name]; }); goto h9i7w; T5hU9: goto Oa3q3; goto ikOhp; pVUwI: $q = 0; goto z4egf; TAHhG: if (!($q < count($queries))) { goto v0xVL; } goto QVeOK; JzKIg: if (!$kabupaten) { goto q0X4e; } goto W1lRX; oyYMM: $logs->write("\x42\111\116\x44\x49\116\107", "\133" . implode("\x2c\40", $queries[$q]["\142\x69\156\144\151\x6e\x67\163"]) . "\135"); goto MkJlm; QVeOK: $sql = Str::replaceArray("\x3f", $queries[$q]["\x62\151\x6e\144\151\156\x67\x73"], str_replace("\x3f", "\47\77\x27", $queries[$q]["\161\x75\x65\x72\x79"])); goto oyYMM; fQF7y: $results = []; goto JzKIg; C4IHO: $kabupaten = DB::table("\164\x6b\x61\x62\x75\160\x61\164\x65\156\40\141\163\40\141")->sharedLock()->select("\141\x2e\153\141\142\165\160\x61\164\145\x6e\x5f\x69\144\x20\141\163\x20\x69\x64", "\x61\x2e\x6b\141\x62\x75\x70\x61\x74\x65\x6e\137\156\141\x6d\145\x20\x61\x73\40\x6e\x61\155\145")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\141\x2e\x70\x72\x6f\166\151\156\163\x69\137\151\x64", $provinsi); })->get(); goto A2JNU; TtOFc: return response()->json($results, 200); goto aB8oh; MkJlm: $logs->write("\x53\x51\114", $sql); goto kZNau; kZNau: XZJYq: goto qs7bv; MqZXa: case "\153\x65\143\141\x6d\141\164\x61\x6e\x2d\x6d\x73\164": goto YkpVV; z067p: QEdif: goto FtC0H; FogXd: $results = $kecamatan->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\x6e\141\155\145" => $value->name]; }); goto z067p; OenJc: $logs->write("\x42\x49\x4e\104\x49\116\107", "\133" . implode("\x2c\x20", $queries[$q]["\142\151\x6e\144\x69\x6e\147\163"]) . "\x5d"); goto kKuYh; FAL8x: $provinsi = request()->provinsi ?? ''; goto uiuhz; FtC0H: return response()->json($results, 200); goto q2l6o; ss9CR: o4H_l: goto cCurU; K_T8t: $q++; goto HOYWk; VYtO0: JdPjX: goto K_T8t; G9ROH: $results = []; goto eRfbx; B2K1c: tQcqG: goto G9ROH; UjRHz: $queries = DB::getQueryLog(); goto jMmXs; YkpVV: DB::enableQueryLog(); goto FAL8x; q2l6o: goto EjMTD; goto iPfMu; kKuYh: $logs->write("\x53\x51\114", $sql); goto VYtO0; eRfbx: if (!$kecamatan) { goto QEdif; } goto FogXd; xxz_n: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\156\144\151\156\147\x73"], str_replace("\77", "\47\77\47", $queries[$q]["\161\165\145\162\171"])); goto OenJc; jMmXs: $q = 0; goto ss9CR; cCurU: if (!($q < count($queries))) { goto tQcqG; } goto xxz_n; XXggT: $kecamatan = DB::table("\x74\x6b\145\x63\x61\155\141\164\141\156\40\141\x73\x20\141")->sharedLock()->select("\141\56\153\x65\143\x61\x6d\x61\x74\141\156\137\x69\x64\40\141\x73\x20\x69\x64", "\141\56\153\x65\143\141\155\x61\x74\141\x6e\137\x6e\141\155\145\x20\x61\x73\x20\x6e\141\x6d\x65")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\56\x70\x72\157\166\151\x6e\163\x69\x5f\151\144", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\x61\56\153\x61\x62\x75\x70\141\164\145\x6e\137\x69\x64", $kabupaten); })->get(); goto UjRHz; uiuhz: $kabupaten = request()->kabupaten ?? ''; goto XXggT; HOYWk: goto o4H_l; goto B2K1c; iPfMu: case "\x6b\145\x6c\x75\162\141\x68\x61\x6e\55\x6d\163\x74": goto DRN80; WOwkO: $q = 0; goto pp1Vt; Vw7AW: if (!$kelurahan) { goto JfI6O; } goto A4lKM; A4lKM: $results = $kelurahan->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\x6e\141\x6d\x65" => $value->name]; }); goto TJzJ0; I1Ctm: $sql = Str::replaceArray("\x3f", $queries[$q]["\142\x69\x6e\x64\151\156\147\x73"], str_replace("\x3f", "\47\77\47", $queries[$q]["\161\165\145\162\171"])); goto k2jlu; w6sCt: $queries = DB::getQueryLog(); goto WOwkO; DRN80: DB::enableQueryLog(); goto IJYdA; pp1Vt: dJjev: goto wiikY; x3287: $kelurahan = DB::table("\x74\x6b\x65\154\165\162\141\150\x61\x6e\40\x61\x73\x20\141")->sharedLock()->select("\141\x2e\x6b\145\154\x75\x72\141\x68\141\x6e\x5f\151\144\40\x61\x73\x20\151\144", "\141\x2e\x6b\x65\x6c\x75\x72\141\x68\141\156\137\156\141\x6d\145\x20\141\x73\x20\x6e\x61\x6d\x65")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\56\160\x72\157\x76\151\156\x73\151\x5f\x69\x64", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\141\x2e\x6b\141\x62\165\x70\x61\164\145\x6e\x5f\151\144", $kabupaten); })->when(isset($kecamatan) && $kecamatan != '', function ($query) use($kecamatan) { $query->where("\141\x2e\153\145\x63\141\x6d\141\x74\141\156\137\151\144", $kecamatan); })->get(); goto w6sCt; wiikY: if (!($q < count($queries))) { goto Yq_E4; } goto I1Ctm; QOALC: $logs->write("\x53\121\x4c", $sql); goto NnavO; FmgVo: Yq_E4: goto I3X6T; k2jlu: $logs->write("\102\111\x4e\104\111\x4e\x47", "\x5b" . implode("\x2c\40", $queries[$q]["\x62\151\156\144\x69\x6e\x67\x73"]) . "\x5d"); goto QOALC; hf1I4: return response()->json($results, 200); goto yqB5r; TJzJ0: JfI6O: goto hf1I4; yqB5r: goto EjMTD; goto pMEHD; y2ZGN: $kabupaten = request()->kabupaten ?? ''; goto uPUm5; IJYdA: $provinsi = request()->provinsi ?? ''; goto y2ZGN; uPUm5: $kecamatan = request()->kecamatan ?? ''; goto x3287; wbqtR: $q++; goto VpoMQ; VpoMQ: goto dJjev; goto FmgVo; NnavO: c9w1_: goto wbqtR; I3X6T: $results = []; goto Vw7AW; pMEHD: case "\x6b\141\x74\145\147\157\162\151\55\155\163\164": goto a8mCk; J954P: goto pR9k_; goto dNFRu; YmQJQ: goto EjMTD; goto fWspX; LJ1yb: $ketegori = DB::table("\164\142\157\157\153\x5f\143\x61\x74\x65\147\x6f\162\171\x20\x61\163\40\x61")->sharedLock()->select("\x61\x2e\x69\x64\40\x61\x73\x20\151\x64", "\141\x2e\x64\145\x73\x63\162\x69\x70\164\151\157\156\40\141\163\40\x6e\141\155\x65")->get(); goto DBjzk; LUet_: $q = 0; goto t1qdb; R1yN0: nll_1: goto X2XUu; ClWVV: $logs->write("\x42\111\x4e\104\x49\x4e\x47", "\x5b" . implode("\x2c\40", $queries[$q]["\142\x69\x6e\x64\x69\156\147\x73"]) . "\135"); goto aSNQn; i7ocq: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\x6e\x64\151\156\147\163"], str_replace("\77", "\47\77\47", $queries[$q]["\161\165\x65\x72\x79"])); goto ClWVV; dNFRu: YvK_D: goto bsByJ; i_Hnv: if (!($q < count($queries))) { goto YvK_D; } goto i7ocq; bsByJ: $results = []; goto nAwGK; X2XUu: $q++; goto J954P; nAwGK: if (!$ketegori) { goto UU25p; } goto oZzK4; DBjzk: $queries = DB::getQueryLog(); goto LUet_; t1qdb: pR9k_: goto i_Hnv; oZzK4: $results = $ketegori->map(function ($value, $key) { return ["\x69\144" => $value->id, "\156\141\x6d\145" => $value->name]; }); goto TbWS8; FlZpf: return response()->json($results, 200); goto YmQJQ; TbWS8: UU25p: goto FlZpf; aSNQn: $logs->write("\x53\x51\x4c", $sql); goto R1yN0; a8mCk: DB::enableQueryLog(); goto LJ1yb; fWspX: default: return response()->json(request()->param, 200); goto EjMTD; } goto Ze6PT; Ze6PT: zwba4: goto AQteT; n90Ha: if (!(request()->has("\160\x61\x72\141\x6d") && request()->param != '')) { goto C1E4w; } goto MQE4V; FyXzp: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\157\147"); goto n90Ha; AQteT: EjMTD: goto cCyEn; ks_47: } public function update(Request $request, string $id) : JsonResponse { return response()->json($request, 200); } public function destroy(string $id) : JsonResponse { return response()->json($id, 200); } public function exportPDF(Request $request) { goto WmmQ8; VVNU_: $logs->write(__FUNCTION__, "\x53\x54\101\x52\124"); goto EI4Kv; EI4Kv: return view("\x70\x64\x66\56\141\147\x72\145\145\155\x65\x6e\164\x5f\154\145\x74\x74\145\x72"); goto MNkWF; WmmQ8: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\157\147"); goto VVNU_; MNkWF: $logs->write(__FUNCTION__, "\123\x54\117\x50\15\xa"); goto Y915g; Y915g: } }
