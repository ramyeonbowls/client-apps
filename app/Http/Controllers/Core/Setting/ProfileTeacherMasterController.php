<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-18 10:11:19             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers\Core\Setting; use App\Logs; use Exception; use Throwable; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Http\JsonResponse; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Hash; use Illuminate\Support\Facades\Crypt; use Illuminate\Support\Facades\Storage; use Illuminate\Support\Facades\Validator; class ProfileTeacherMasterController extends Controller { protected $client_id = ''; protected $app_url = ''; public function __construct() { goto YNRSK; EComH: $this->app_url = config("\141\x70\160\x2e\165\162\x6c", ''); goto Ctwgb; OZcQx: $this->client_id = config("\x61\x70\x70\56\143\x6c\151\x65\156\164\x5f\x69\144", ''); goto EComH; YNRSK: $this->middleware("\x61\x75\x74\150"); goto OZcQx; Ctwgb: } public function index(Request $request) { goto YQrgW; Mew4u: $logs->write("\102\x49\116\104\x49\116\107", "\133" . implode("\x2c\x20", $queries[$q]["\142\x69\156\x64\151\156\x67\x73"]) . "\x5d"); goto klb0_; yTWC_: return response()->json($results, 200); goto jypcc; DVIMW: pPs7c: goto U23Q8; mL2k2: goto BhCL1; goto i0B5v; klb0_: $logs->write("\123\121\x4c", $sql); goto DVIMW; Kjpsn: $q = 0; goto HffRG; qmhUH: $results = DB::table("\x75\x73\145\x72\163\40\141\163\40\141")->select(["\x61\x2e\151\144", "\x61\x2e\x65\155\x61\x69\x6c", "\x61\56\156\x61\155\x65", "\x70\150\x6f\x6e\x65", "\x67\145\x6e\x64\145\x72", "\x62\151\x72\x74\x68\144\141\x79", "\x6e\x69\153"])->join("\x74\141\x74\164\162\x5f\x6d\145\155\x62\x65\162\x20\x61\163\x20\142", function ($join) { $join->on("\141\x2e\x69\144", "\75", "\x62\x2e\x69\144"); })->where("\141\56\143\154\x69\145\156\164\137\x69\144", $this->client_id)->where("\141\56\x69\144", $user->id)->first(); goto A9_1l; YQrgW: $user = auth()->user(); goto f4bfc; r3hF5: if (!($q < count($queries))) { goto V4O4O; } goto M5qV_; fPqkL: $logs->write(__FUNCTION__, "\x53\124\x41\x52\x54"); goto NH1nK; XqOwj: return response()->json($results, 200); goto uJhkX; Dc45I: $logs->write(__FUNCTION__, "\123\x54\x4f\120\xd\xa"); goto yTWC_; U23Q8: $q++; goto mL2k2; jypcc: tk0kN: goto XqOwj; A9_1l: $queries = DB::getQueryLog(); goto Kjpsn; M5qV_: $sql = Str::replaceArray("\77", $queries[$q]["\x62\x69\x6e\144\151\156\147\163"], str_replace("\x3f", "\47\x3f\x27", $queries[$q]["\161\x75\x65\x72\171"])); goto Mew4u; HffRG: BhCL1: goto r3hF5; i0B5v: V4O4O: goto Dc45I; Ya0o_: $results = []; goto mtjCa; mtjCa: if (!($user && $user->role == "\164\x65\x61\143\150\145\162")) { goto tk0kN; } goto qmhUH; f4bfc: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\x6f\x67"); goto fPqkL; NH1nK: DB::enableQueryLog(); goto Ya0o_; uJhkX: } public function store(Request $request) : JsonResponse { goto sYd_Z; SYMqO: $result["\x73\164\141\x74\x75\x73"] = 200; goto O8DGx; O8DGx: $result["\155\145\163\163\141\x67\x65"] = ''; goto iN13y; kE2oD: $logs->write(__FUNCTION__, "\x53\x54\117\x50\15\12"); goto lBu5M; iN13y: try { goto KVqt9; QhS1P: $result["\x73\x74\141\x74\x75\x73"] = 201; goto AO5JR; MiEs2: $logs->write("\x42\111\x4e\x44\x49\x4e\x47", "\133" . implode("\54\40", $queries[$q]["\x62\x69\156\144\151\156\x67\163"]) . "\135"); goto HWT_1; XCryd: wDEjT: goto XVCO4; pKPFD: $result["\x73\164\141\x74\x75\x73"] = 201; goto bXWJC; GyNoq: if (!$user->update(["\x70\x61\x73\x73\x77\157\x72\144" => Hash::make($request->password)])) { goto nmyRQ; } goto QwbWp; OOMQz: if (!$validator->fails()) { goto yoD3W; } goto nzK3W; XVCO4: $queries = DB::getQueryLog(); goto HUvm4; ynJMI: nmyRQ: goto XCryd; QwbWp: $logs->write("\111\116\106\117", "\102\x65\162\x68\141\163\151\154\x20\x55\160\x64\141\x74\x65\40\x44\141\x74\141\x2e"); goto pKPFD; lpT28: $validator = Validator::make($request->all(), ["\156\141\x6d\x65" => ["\x72\x65\161\165\x69\x72\x65\x64", "\x73\164\162\x69\156\x67", "\x6d\141\x78\x3a\62\65\x35"], "\x65\155\x61\151\154" => ["\162\145\x71\x75\151\x72\x65\144", "\x73\x74\x72\151\x6e\147", "\145\155\141\151\x6c", "\155\x61\170\x3a\x32\x35\x35", "\x75\156\151\x71\165\145\72\x75\x73\145\x72\x73\x2c\x65\x6d\x61\x69\154\x2c" . $user->id], "\x6e\x69\153" => "\x6e\165\154\x6c\141\x62\x6c\145\x7c\163\x74\162\151\x6e\x67\x7c\155\x61\170\72\x32\60", "\x70\150\x6f\156\x65" => "\x72\x65\161\x75\x69\162\x65\x64\x7c\x73\164\162\x69\156\147\174\155\x61\170\72\x31\x35", "\x62\151\x72\164\x68\144\x61\171" => "\162\x65\161\165\151\x72\145\144\x7c\x64\x61\x74\x65", "\147\x65\156\x64\x65\x72" => "\x72\x65\x71\x75\151\162\145\x64\174\x73\164\162\151\156\147\174\x69\156\x3a\x4c\x2c\x50", "\160\x61\163\x73\x77\x6f\x72\144" => ["\x72\x65\x71\165\x69\162\x65\x64", "\163\164\x72\x69\x6e\147", "\155\151\156\72\x38"]]); goto OOMQz; feGKF: QyH3X: goto GyNoq; Eyn5L: AWflT: goto TL48m; B5CcK: goto eGSYt; goto Eyn5L; HQrLV: goto wDEjT; goto feGKF; bXWJC: $result["\x6d\145\x73\x73\141\x67\x65"] = "\x42\x65\x72\150\141\x73\151\x6c\40\125\x70\144\x61\164\x65\40\104\x61\x74\141\x2e"; goto ynJMI; HWT_1: $logs->write("\123\x51\x4c", $queries[$q]["\161\x75\x65\x72\x79"]); goto ltSLW; WEx2D: if (!($q < count($queries))) { goto AWflT; } goto MiEs2; KYyGL: eGSYt: goto WEx2D; wafl_: $q++; goto B5CcK; HUvm4: $q = 0; goto KYyGL; AO5JR: $result["\155\145\x73\163\141\147\145"] = "\124\151\144\141\153\40\101\x64\x61\x20\x44\141\x74\141\x20\x59\141\156\x67\40\104\151\x20\x55\x70\144\x61\164\145\x2e"; goto HQrLV; nzK3W: return response()->json(["\145\x72\x72\157\x72\x73" => $validator->errors()], 400); goto P4G4x; P4G4x: yoD3W: goto Syf64; Syf64: if ($request->has("\160\x61\163\163\167\x6f\x72\x64")) { goto QyH3X; } goto QhS1P; ltSLW: zED31: goto wafl_; KVqt9: DB::enableQueryLog(); goto lpT28; TL48m: } catch (Throwable $th) { $logs->write("\105\122\x52\x4f\x52", $th->getMessage()); $result["\155\145\163\x73\141\x67\145"] = "\107\x61\147\x61\154\40\125\x70\x64\x61\x74\x65\40\104\x61\x74\x61\x2e\x3c\142\x72\x3e" . $th->getMessage(); } goto kE2oD; sYd_Z: $user = auth()->user(); goto L3_bp; L3_bp: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\114\x6f\147"); goto BfVBf; lBu5M: return response()->json($result["\x6d\x65\163\163\x61\147\145"], $result["\163\164\x61\x74\x75\x73"]); goto y2tLy; BfVBf: $logs->write(__FUNCTION__, "\x53\124\101\x52\124"); goto SYMqO; y2tLy: } public function show(string $id) : JsonResponse { goto AxVRa; h2fDk: NfCBP: goto dnbh7; DhJql: switch (request()->param) { case "\x70\x72\157\166\x69\156\x73\x69\55\155\x73\164": goto XAUjJ; Lfm5_: if (!($q < count($queries))) { goto ikQ2_; } goto YBeqr; sSro4: ikQ2_: goto lAewV; ND3_Y: $q = 0; goto lT7Ne; vzBRR: $provinsi = DB::table("\164\160\162\157\x76\151\156\x73\151\40\141\163\x20\141")->sharedLock()->select("\141\56\160\x72\x6f\166\151\156\x73\151\137\x69\x64\x20\141\163\x20\151\144", "\141\56\160\162\157\x76\151\156\x73\151\x5f\156\141\155\x65\40\141\x73\x20\x6e\x61\155\145")->get(); goto pCAL6; g0ea9: if (!$provinsi) { goto XNXve; } goto n4kns; lT7Ne: Y_dou: goto Lfm5_; Q3muS: $logs->write("\x42\111\x4e\104\111\x4e\x47", "\x5b" . implode("\54\x20", $queries[$q]["\x62\151\x6e\x64\x69\x6e\147\163"]) . "\135"); goto vhdr4; XAUjJ: DB::enableQueryLog(); goto vzBRR; n4kns: $results = $provinsi->map(function ($value, $key) { return ["\151\x64" => $value->id, "\x6e\x61\x6d\145" => $value->name]; }); goto PwOHz; XO_Kv: goto Y_dou; goto sSro4; eEnRJ: KEFtX: goto Tt3at; g9LjL: return response()->json($results, 200); goto vuzWm; PwOHz: XNXve: goto g9LjL; YBeqr: $sql = Str::replaceArray("\x3f", $queries[$q]["\x62\151\156\x64\151\x6e\x67\x73"], str_replace("\77", "\47\x3f\x27", $queries[$q]["\161\165\145\162\171"])); goto Q3muS; lAewV: $results = []; goto g0ea9; pCAL6: $queries = DB::getQueryLog(); goto ND3_Y; vhdr4: $logs->write("\x53\121\114", $sql); goto eEnRJ; Tt3at: $q++; goto XO_Kv; vuzWm: goto fVCoh; goto iE60n; iE60n: case "\153\x61\142\x75\x70\x61\x74\145\156\55\155\x73\164": goto n6UMN; U8LP7: $logs->write("\x53\121\114", $sql); goto y3Vnr; ODbNK: $kabupaten = DB::table("\x74\153\x61\x62\x75\160\x61\x74\145\156\40\x61\163\x20\141")->sharedLock()->select("\x61\56\153\x61\x62\165\x70\x61\164\145\156\x5f\x69\144\40\x61\163\x20\x69\144", "\x61\56\x6b\141\x62\165\x70\141\164\x65\x6e\x5f\156\x61\155\145\x20\141\x73\40\x6e\x61\x6d\x65")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\x2e\160\162\x6f\166\x69\x6e\163\x69\x5f\151\144", $provinsi); })->get(); goto LRXxi; hJV5K: $results = []; goto dA2tk; fx4tl: QA4yi: goto hJV5K; igvwy: $logs->write("\x42\x49\x4e\104\x49\x4e\x47", "\x5b" . implode("\54\40", $queries[$q]["\x62\151\156\144\x69\156\x67\163"]) . "\x5d"); goto U8LP7; x3Bgx: goto fVCoh; goto BfiKz; P1hrP: $results = $kabupaten->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\156\x61\155\x65" => $value->name]; }); goto XzAqD; IuQo9: $q = 0; goto HY1YI; n6UMN: DB::enableQueryLog(); goto nhGgO; LRXxi: $queries = DB::getQueryLog(); goto IuQo9; nhGgO: $provinsi = request()->provinsi ?? ''; goto ODbNK; y3Vnr: nYi9s: goto IH8dY; XVa7A: goto FybWx; goto fx4tl; dA2tk: if (!$kabupaten) { goto cuILU; } goto P1hrP; NAT9H: return response()->json($results, 200); goto x3Bgx; HZ0V3: $sql = Str::replaceArray("\77", $queries[$q]["\142\151\156\x64\151\x6e\147\163"], str_replace("\x3f", "\47\x3f\47", $queries[$q]["\161\x75\145\162\x79"])); goto igvwy; XzAqD: cuILU: goto NAT9H; HY1YI: FybWx: goto A8Qif; IH8dY: $q++; goto XVa7A; A8Qif: if (!($q < count($queries))) { goto QA4yi; } goto HZ0V3; BfiKz: case "\153\145\x63\x61\x6d\x61\164\141\x6e\55\155\x73\x74": goto cgKAU; Tksni: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\x6e\144\151\156\x67\x73"], str_replace("\77", "\x27\x3f\47", $queries[$q]["\x71\165\145\x72\x79"])); goto AQ5pL; gglug: if (!($q < count($queries))) { goto rGEFl; } goto Tksni; myBGB: o28l0: goto SMFMg; oMabQ: goto fVCoh; goto UgCwp; SeQkU: qf6fI: goto gglug; mQtdF: $results = $kecamatan->map(function ($value, $key) { return ["\x69\x64" => $value->id, "\x6e\x61\x6d\145" => $value->name]; }); goto VDRjk; AeeG7: return response()->json($results, 200); goto oMabQ; AQ5pL: $logs->write("\x42\111\x4e\x44\x49\x4e\107", "\133" . implode("\54\x20", $queries[$q]["\142\x69\156\144\151\156\147\x73"]) . "\x5d"); goto Pm1OQ; unOjS: $results = []; goto thv1o; Pm1OQ: $logs->write("\123\x51\114", $sql); goto myBGB; ltFgq: $kecamatan = DB::table("\164\153\145\143\141\155\x61\164\x61\156\40\141\x73\40\141")->sharedLock()->select("\x61\56\x6b\145\x63\x61\x6d\141\x74\141\x6e\137\x69\144\x20\x61\x73\40\x69\x64", "\141\56\x6b\145\x63\141\x6d\141\164\141\156\137\156\141\155\x65\x20\x61\163\x20\x6e\x61\x6d\145")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\x61\56\x70\162\x6f\x76\151\156\x73\x69\137\151\144", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\x61\56\x6b\x61\142\165\x70\141\164\145\156\x5f\x69\144", $kabupaten); })->get(); goto jPG6P; jPG6P: $queries = DB::getQueryLog(); goto ck51q; p0oHY: goto qf6fI; goto P9RQ8; thv1o: if (!$kecamatan) { goto SSaui; } goto mQtdF; zC4xB: $kabupaten = request()->kabupaten ?? ''; goto ltFgq; P9RQ8: rGEFl: goto unOjS; VDRjk: SSaui: goto AeeG7; ck51q: $q = 0; goto SeQkU; cgKAU: DB::enableQueryLog(); goto ZgL3Z; ZgL3Z: $provinsi = request()->provinsi ?? ''; goto zC4xB; SMFMg: $q++; goto p0oHY; UgCwp: case "\153\x65\154\165\162\x61\150\x61\x6e\55\x6d\x73\x74": goto rN8p8; MdcfO: $logs->write("\x42\111\116\104\x49\x4e\x47", "\x5b" . implode("\x2c\x20", $queries[$q]["\x62\x69\x6e\144\151\156\x67\163"]) . "\x5d"); goto nUiHS; rN8p8: DB::enableQueryLog(); goto rvr3o; ZA2Mq: $kelurahan = DB::table("\164\x6b\145\x6c\165\x72\x61\x68\x61\x6e\x20\x61\163\x20\x61")->sharedLock()->select("\x61\56\x6b\145\x6c\165\162\141\150\141\156\x5f\151\144\x20\x61\163\40\151\144", "\141\56\x6b\145\x6c\x75\x72\141\150\141\x6e\137\x6e\141\x6d\145\x20\141\x73\40\156\x61\155\x65")->when(isset($provinsi) && $provinsi != '', function ($query) use($provinsi) { $query->where("\141\56\160\x72\157\x76\x69\x6e\163\x69\137\151\144", $provinsi); })->when(isset($kabupaten) && $kabupaten != '', function ($query) use($kabupaten) { $query->where("\x61\56\153\x61\142\x75\x70\x61\x74\x65\156\x5f\x69\x64", $kabupaten); })->when(isset($kecamatan) && $kecamatan != '', function ($query) use($kecamatan) { $query->where("\x61\x2e\x6b\145\143\x61\x6d\x61\164\141\156\x5f\151\x64", $kecamatan); })->get(); goto Yt1Bd; MaUaU: return response()->json($results, 200); goto peXJ8; gASkq: if (!$kelurahan) { goto jtZTw; } goto vfmBR; Yt1Bd: $queries = DB::getQueryLog(); goto F1FLP; soiqX: $results = []; goto gASkq; vfmBR: $results = $kelurahan->map(function ($value, $key) { return ["\151\144" => $value->id, "\x6e\x61\155\x65" => $value->name]; }); goto MbLPg; peXJ8: goto fVCoh; goto RSxTz; G11ZE: if (!($q < count($queries))) { goto s6bTK; } goto rNbj7; rNbj7: $sql = Str::replaceArray("\x3f", $queries[$q]["\x62\x69\x6e\x64\151\x6e\x67\x73"], str_replace("\x3f", "\x27\x3f\x27", $queries[$q]["\161\165\145\162\x79"])); goto MdcfO; KbPkt: Sm57q: goto G11ZE; R2CkB: $q++; goto xfFjC; taLFF: $kabupaten = request()->kabupaten ?? ''; goto gjAwy; MbLPg: jtZTw: goto MaUaU; nUiHS: $logs->write("\x53\121\114", $sql); goto VjCew; F1FLP: $q = 0; goto KbPkt; xfFjC: goto Sm57q; goto Fklif; gjAwy: $kecamatan = request()->kecamatan ?? ''; goto ZA2Mq; rvr3o: $provinsi = request()->provinsi ?? ''; goto taLFF; Fklif: s6bTK: goto soiqX; VjCew: Dv2_a: goto R2CkB; RSxTz: case "\x6b\x61\x74\x65\x67\x6f\x72\151\x2d\155\x73\x74": goto FsvlR; KFtLw: return response()->json($results, 200); goto LBhxu; zFxew: dxQ7M: goto glZRD; f8FGE: X5kEx: goto AYOYJ; AYOYJ: $results = []; goto nfY_e; FsvlR: DB::enableQueryLog(); goto H7ryk; wkqbd: $sql = Str::replaceArray("\x3f", $queries[$q]["\142\151\156\144\x69\x6e\147\x73"], str_replace("\77", "\x27\77\x27", $queries[$q]["\x71\x75\x65\162\171"])); goto y8JvR; PTYwa: $results = $ketegori->map(function ($value, $key) { return ["\151\144" => $value->id, "\156\141\x6d\x65" => $value->name]; }); goto K0KsF; r6Bk7: $logs->write("\123\121\x4c", $sql); goto zFxew; y8JvR: $logs->write("\102\111\x4e\104\111\116\107", "\133" . implode("\x2c\x20", $queries[$q]["\142\151\x6e\144\151\x6e\x67\x73"]) . "\135"); goto r6Bk7; Buv1S: $queries = DB::getQueryLog(); goto YbnhU; fAORU: goto Qr597; goto f8FGE; nfY_e: if (!$ketegori) { goto oZTeO; } goto PTYwa; H7ryk: $ketegori = DB::table("\164\142\157\x6f\153\x5f\x63\x61\164\145\x67\x6f\x72\x79\40\141\x73\x20\x61")->sharedLock()->select("\x61\56\x69\x64\40\141\163\x20\151\144", "\x61\56\x64\145\x73\x63\162\x69\160\x74\x69\x6f\156\40\141\163\40\x6e\x61\x6d\145")->get(); goto Buv1S; YbnhU: $q = 0; goto cHXpC; glZRD: $q++; goto fAORU; K0KsF: oZTeO: goto KFtLw; cHXpC: Qr597: goto Z0LYF; Z0LYF: if (!($q < count($queries))) { goto X5kEx; } goto wkqbd; LBhxu: goto fVCoh; goto nZaOw; nZaOw: default: return response()->json(request()->param, 200); goto fVCoh; } goto gW5r9; i1XZu: if (!(request()->has("\x70\141\x72\141\x6d") && request()->param != '')) { goto NfCBP; } goto DhJql; gW5r9: f5yx_: goto KpxIy; AxVRa: $logs = new Logs(Arr::last(explode("\134", get_class())) . "\x4c\x6f\x67"); goto i1XZu; KpxIy: fVCoh: goto h2fDk; dnbh7: } public function update(Request $request, string $id) : JsonResponse { return response()->json($request, 200); } public function destroy(string $id) : JsonResponse { return response()->json($id, 200); } public function exportPDF(Request $request) { goto u8Ef8; aeNmJ: $logs->write(__FUNCTION__, "\123\124\101\122\x54"); goto MpMet; qj3Xh: $logs->write(__FUNCTION__, "\123\x54\x4f\x50\xd\12"); goto DVND0; u8Ef8: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\x6f\x67"); goto aeNmJ; MpMet: return view("\160\x64\x66\x2e\141\x67\x72\145\145\x6d\145\x6e\x74\137\154\145\x74\x74\x65\162"); goto qj3Xh; DVND0: } }
