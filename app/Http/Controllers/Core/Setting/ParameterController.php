<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-18 10:11:19             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers\Core\Setting; use App\Logs; use Exception; use Throwable; use Carbon\Carbon; use App\Models\Parameter; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Http\JsonResponse; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Hash; use Illuminate\Support\Facades\Crypt; use Illuminate\Support\Facades\Storage; use App\Http\Requests\Setting\UpdateProfileMasterRequest; class ParameterController extends Controller { protected $client_id = ''; public function __construct() { $this->middleware("\x61\x75\164\x68"); $this->client_id = config("\x61\160\x70\56\x63\154\x69\145\156\x74\x5f\x69\144", ''); } public function index(Request $request) { goto RDbaY; EhDMF: QD2FM: goto Gdt1A; RDbaY: $user = auth()->user(); goto uxNTk; ATXn5: $results = []; goto u6L5g; u6L5g: if (!($user && $user->role == "\141\144\155\x69\x6e")) { goto QD2FM; } goto KIJpY; UwlNP: uildn: goto DJgya; KIJpY: $results = DB::table("\x74\160\x61\x72\141\x6d\x65\164\145\162\x20\141\163\40\141")->select(["\x61\56\x6e\141\155\x65", "\x61\x2e\144\x65\x73\x63\x72\151\x70\x74\x69\x6f\x6e", "\141\56\x76\141\x6c\165\x65"])->where("\141\x2e\x63\x6c\x69\x65\x6e\164\x5f\x69\144", $this->client_id)->where("\141\56\156\141\155\x65", "\x21\x3d", "\x61\144\144\x69\x74\151\157\x6e\141\154\x5f\x66\x65\141\x74\x75\x72\x65\163")->orderBy("\x63\162\x65\141\x74\145\144\137\x61\164")->get(); goto Cm1Sj; OB8BD: $sql = Str::replaceArray("\x3f", $queries[$q]["\x62\x69\x6e\144\151\x6e\147\163"], str_replace("\77", "\x27\x3f\47", $queries[$q]["\161\165\145\x72\x79"])); goto aACnI; XcQyz: Mbg2t: goto SuDWj; T0Heh: return response()->json($results, 200); goto EhDMF; EeYl6: MSavf: goto eh87p; Cm1Sj: $queries = DB::getQueryLog(); goto BUvUj; vKLX3: $logs->write(__FUNCTION__, "\123\124\101\122\124"); goto KJd4_; sm0S7: $logs->write("\123\121\x4c", $sql); goto UwlNP; eh87p: $logs->write(__FUNCTION__, "\123\x54\117\120\15\xa"); goto T0Heh; Gdt1A: return response()->json($results, 200); goto DzLlP; DJgya: $q++; goto WK0mL; SuDWj: if (!($q < count($queries))) { goto MSavf; } goto OB8BD; uxNTk: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\x6f\x67"); goto vKLX3; aACnI: $logs->write("\102\x49\116\104\111\116\x47", "\133" . implode("\x2c\x20", $queries[$q]["\142\x69\156\144\x69\x6e\147\x73"]) . "\135"); goto sm0S7; KJd4_: DB::enableQueryLog(); goto ATXn5; BUvUj: $q = 0; goto XcQyz; WK0mL: goto Mbg2t; goto EeYl6; DzLlP: } public function store(Request $request) { goto NAnwC; yAGc3: return response()->json($result["\x6d\145\x73\x73\141\147\145"], $result["\163\x74\x61\164\165\x73"]); goto Wl3uI; NAnwC: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\157\x67"); goto wwSQB; wwSQB: $logs->write(__FUNCTION__, "\123\124\101\x52\124"); goto WzBGF; LvweU: try { goto c_H2w; c_H2w: DB::enableQueryLog(); goto GIJzT; gYfIO: WFSq5: goto MLPhv; MLPhv: $q++; goto sA3xY; Hif30: $logs->write("\111\116\106\117", "\106\x61\x69\x6c\145\144\x20\x75\160\144\141\x74\x65\x64"); goto q5pRs; PZF5H: mKQZY: goto W3VIY; VtfCA: $q = 0; goto U0dx9; q5pRs: $result["\155\x65\163\163\141\x67\x65"] = "\x46\x61\151\x6c\x65\144\x20\165\160\144\x61\164\x65\x64\56\74\142\x72\x3e"; goto vL9g2; sA3xY: goto uv1_u; goto PZF5H; NjAoR: DB::rollBack(); goto Hif30; b3kOv: $logs->write("\102\x49\x4e\x44\x49\x4e\107", "\x5b" . implode("\x2c\40", $queries[$q]["\x62\x69\x6e\x64\151\156\147\x73"]) . "\x5d"); goto v6P3z; TV2uP: if ($error) { goto kseVn; } goto cXUwa; eXl_M: $result["\x73\x74\141\x74\165\x73"] = 201; goto KQhVN; WRxjm: $logs->write("\x49\x4e\x46\117", "\x53\165\143\x63\x65\x73\163\x66\165\x6c\x6c\171\x20\165\160\144\141\x74\145\x64"); goto eXl_M; cXUwa: DB::commit(); goto WRxjm; H1i6Z: kseVn: goto NjAoR; S5s1O: foreach ($request->all() as $key => $value) { goto J0bYO; xtxwI: CRech: goto ppBB5; P8L2b: $error = true; goto b5uvv; J0bYO: $updated = Parameter::where("\x6e\141\x6d\x65", $key)->where("\x63\x6c\x69\x65\156\164\x5f\151\x64", "\x3d", $this->client_id)->update(["\166\x61\154\x75\x65" => $value != '' ? $value : 0, "\165\x70\x64\x61\x74\145\144\137\x61\164" => Carbon::now("\x41\163\151\x61\57\x4a\141\x6b\141\x72\164\x61")]); goto L7k1d; b5uvv: N8T0B: goto xtxwI; L7k1d: if ($updated) { goto N8T0B; } goto P8L2b; ppBB5: } goto IvvZB; GIJzT: DB::beginTransaction(); goto B54ei; j2ehO: goto G1WgD; goto H1i6Z; U0dx9: uv1_u: goto C91B7; B54ei: $validatedData = $request->validate(["\x61\160\x70\137\162\145\x67\137\155\x65\155\142\145\x72" => "\x72\145\x71\165\x69\x72\145\144\x7c\x69\156\164\x65\x67\145\162", "\155\141\x6b\163\137\162\x65\156\164\137\142\157\157\153" => "\x72\145\161\165\x69\x72\145\x64\174\151\156\164\145\147\x65\x72", "\x72\x65\x67\x5f\x6d\x65\x6d\x62\145\162" => "\162\x65\161\x75\151\162\145\x64\174\x69\156\x74\145\147\x65\x72", "\x72\x65\x6e\164\137\x62\x6f\157\x6b" => "\162\x65\161\165\151\x72\145\x64\174\151\156\x74\145\x67\145\x72"]); goto S5s1O; vL9g2: G1WgD: goto iaXBR; iaXBR: $queries = DB::getQueryLog(); goto VtfCA; v6P3z: $logs->write("\123\x51\114", $queries[$q]["\x71\x75\x65\x72\x79"]); goto gYfIO; IvvZB: tx5Cl: goto TV2uP; KQhVN: $result["\155\145\163\x73\141\147\x65"] = "\x53\x75\143\143\x65\163\163\x66\165\x6c\154\x79\40\165\160\x64\x61\x74\145\x64\56"; goto j2ehO; C91B7: if (!($q < count($queries))) { goto mKQZY; } goto b3kOv; W3VIY: } catch (Exception $e) { goto Xbfcw; JPrBp: $logs->write("\x45\x52\x52\x4f\122", $th->getMessage()); goto AF9j1; Xbfcw: DB::rollBack(); goto JPrBp; AF9j1: $result["\155\145\x73\163\x61\x67\x65"] = "\106\141\x69\x6c\145\x64\40\x75\160\144\141\x74\145\x64\x2e\74\142\x72\76" . $th->getMessage(); goto MWbQA; MWbQA: } goto yAGc3; WzBGF: $result["\x73\x74\x61\164\x75\x73"] = 200; goto Bf7zP; r4DEy: $error = false; goto LvweU; Bf7zP: $result["\155\x65\x73\x73\141\x67\x65"] = ''; goto r4DEy; Wl3uI: } public function show(string $id) : JsonResponse { } public function update(Request $request, string $id) : JsonResponse { } public function destroy(string $id) : JsonResponse { return response()->json($id, 200); } }
