<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:14             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Http\Controllers; use App\Logs; use Carbon\Carbon; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Hash; use Illuminate\Support\Facades\Validator; class ProfileController extends Controller { protected $client_id = ''; public function __construct() { $this->middleware("\141\165\x74\x68"); $this->client_id = config("\141\x70\160\56\x63\x6c\x69\x65\156\164\x5f\x69\x64", ''); } public function index() { goto Hm7mx; Hm7mx: Carbon::setLocale("\x69\144"); goto piQns; uGoyl: $attr = DB::table("\164\x61\164\164\162\137\155\x65\x6d\142\x65\162\x20\x61\x73\40\141")->select(["\141\56\x62\151\162\x74\150\x64\x61\x79", "\141\x2e\156\151\153", "\x61\x2e\x67\x65\156\144\145\162", "\x61\56\x70\150\x6f\x6e\x65", "\141\x2e\160\150\157\164\157\40\141\163\40\141\x76\141\164\141\x72"])->where("\141\56\x63\x6c\151\145\x6e\164\137\x69\x64", $this->client_id)->where("\x61\56\151\144", $user->id)->get(); goto aYzuw; WkskW: return response()->json(["\156\141\x6d\145" => '', "\145\x6d\141\151\x6c" => '', "\160\x68\x6f\156\145" => '', "\147\x65\156\144\145\x72" => '', "\x62\151\162\164\150\144\141\171" => '', "\x6e\x69\153" => '', "\x61\166\141\x74\x61\162" => ''], 200); goto yrJkI; piQns: $user = auth()->user(); goto oocwl; aYzuw: return response()->json(["\x6e\x61\x6d\145" => $user->name, "\145\155\141\x69\x6c" => $user->email, "\x76\145\x72\x69\146\151\x65\144" => $user->email_verified_at != '' ? true : false, "\160\x68\x6f\156\145" => $attr[0]->phone ?? '', "\x67\145\x6e\x64\x65\162" => $attr[0]->gender ?? '', "\142\x69\162\164\x68\x64\141\x79" => $attr[0]->birthday ?? '', "\156\151\153" => $attr[0]->nik ?? '', "\x61\166\141\x74\141\x72" => isset($attr[0]->avatar) && file_exists(public_path("\57\163\x74\x6f\162\141\147\x65\57\x69\155\141\147\x65\x73\57\x70\162\x6f\x66\151\154\x65\x2f" . $attr[0]->avatar)) ? "\57\163\x74\x6f\162\141\147\145\57\151\x6d\x61\x67\145\x73\57\x70\162\x6f\x66\151\x6c\145\57" . $attr[0]->avatar : "\57\x73\164\157\162\x61\147\x65\57\x69\x6d\141\147\x65\x73\x2f\x70\x72\x6f\x66\x69\x6c\145\57\144\x65\x66\141\165\x6c\164\56\x6a\x70\x67"], 200); goto UCwE2; oocwl: if (!($user && $user->role == "\155\145\x6d\x62\145\162")) { goto NUqpH; } goto uGoyl; UCwE2: NUqpH: goto WkskW; yrJkI: } public function UpdateProfile(Request $request) { goto Iu212; RPrAP: $logs->write(__FUNCTION__, "\x53\124\101\122\x54"); goto PZNTB; L2xFo: $logs = new Logs(Arr::last(explode("\x5c", get_class())) . "\x4c\x6f\x67"); goto RPrAP; OxbPv: if (!$validator->fails()) { goto swid0; } goto o68Im; o68Im: return response()->json(["\x65\162\x72\157\x72\x73" => $validator->errors()], 400); goto WE8qm; PZNTB: $validator = Validator::make($request->all(), ["\x6e\x61\155\x65" => ["\162\145\x71\x75\151\162\145\144", "\163\x74\162\151\156\147", "\x6d\x61\170\x3a\x32\65\65"], "\x65\155\x61\151\x6c" => ["\x72\145\x71\165\151\x72\145\x64", "\163\164\x72\151\156\147", "\x65\155\x61\x69\x6c", "\x6d\141\170\72\62\65\65", "\165\x6e\151\x71\165\145\72\165\163\145\162\x73\54\145\155\x61\x69\x6c\54" . $user->id], "\x6e\151\x6b" => "\156\165\154\154\x61\142\154\145\174\163\164\x72\151\156\147\174\155\141\x78\x3a\62\60", "\x70\x68\x6f\156\145" => "\162\145\x71\x75\x69\x72\x65\144\174\x73\164\x72\x69\x6e\x67\x7c\x6d\141\x78\x3a\x31\65", "\x62\x69\162\164\x68\144\141\171" => "\162\x65\161\165\151\x72\x65\144\x7c\144\141\164\x65", "\x67\145\x6e\x64\145\162" => "\x72\145\x71\x75\x69\x72\145\x64\x7c\163\164\x72\x69\156\x67\x7c\151\x6e\x3a\114\54\x50"]); goto OxbPv; hyqy5: $user = auth()->user(); goto L2xFo; ZIFTS: try { goto mZLbW; sLdiP: if (!($q < count($queries))) { goto Z2CvK; } goto TP3K7; TwA2F: $user->update(["\x6e\x61\x6d\x65" => $request->name, "\145\x6d\x61\x69\x6c" => $request->email, "\165\160\144\141\x74\145\x64\137\x61\164" => Carbon::now("\101\163\151\x61\57\112\x61\153\x61\x72\x74\141")]); goto rupQc; byno5: $user->sendEmailVerificationNotification(); goto ax3pN; e0MaS: try { goto VecOp; wDesf: $extension = $request->file("\x61\166\141\164\x61\x72")->getClientOriginalExtension(); goto VL9VB; VecOp: $avatar_file = $request->file("\141\166\141\x74\141\162")->getClientOriginalName(); goto wDesf; VL9VB: $avatar_name = $this->client_id . "\x2d" . $user->id . "\56" . $extension; goto oQ2A5; oQ2A5: $request->file("\x61\166\x61\x74\141\x72")->storeAs("\57\x70\165\142\x6c\x69\x63\x2f\x69\x6d\141\147\x65\x73\x2f\160\x72\157\x66\x69\154\145", $avatar_name); goto rSE2k; rSE2k: } catch (Throwable $th) { $logs->write("\x45\122\x52\117\x52", $th->getMessage()); } goto DrRqa; L1ijf: \DB::beginTransaction(); goto GPSkI; igaET: $q = 0; goto abxs2; Of4xa: if (!$request->hasFile("\x61\x76\141\x74\141\x72")) { goto Ws9Rg; } goto e0MaS; NcMs0: STTsM: goto hKbqs; V1DXX: $logs->write("\123\x51\114", $sql); goto n9et5; QXhhe: return response()->json("\125\x70\x64\x61\x74\x65\40\x70\162\157\146\x69\x6c\x65\40\x73\165\143\x63\x65\163\x73\x66\165\154\41\x2e", 201); goto NQRmb; mnMYS: $logs->write("\102\111\x4e\x44\111\x4e\107", "\x5b" . implode("\x2c\x20", $queries[$q]["\x62\151\156\x64\x69\x6e\x67\x73"]) . "\135"); goto V1DXX; LORAx: $q++; goto NQ14g; hKbqs: $avatar_name = ''; goto Of4xa; NQ14g: goto KG5Hg; goto zqSJy; rupQc: if (empty($request->password)) { goto STTsM; } goto yQXGh; ovb6j: if (!$emailChanged) { goto Pr_DB; } goto byno5; DrRqa: Ws9Rg: goto ByqnQ; yQXGh: $user->update(["\160\141\163\x73\x77\x6f\x72\144" => Hash::make($request->password)]); goto NcMs0; abxs2: KG5Hg: goto sLdiP; jcQxT: $updateData["\x70\150\157\x74\157"] = $avatar_name; goto SwfV6; uKzyd: $logs->write(__FUNCTION__, "\123\x54\117\120\15\xa"); goto QXhhe; n9et5: zt61_: goto LORAx; GPSkI: $emailChanged = $user->email !== $request->email; goto TwA2F; ax3pN: Pr_DB: goto ADPUE; mcpCc: if (empty($avatar_name)) { goto zGP5L; } goto jcQxT; zqSJy: Z2CvK: goto uKzyd; ADPUE: \DB::commit(); goto U7nZL; TP3K7: $sql = Str::replaceArray("\77", $queries[$q]["\142\x69\x6e\144\x69\156\x67\x73"], str_replace("\77", "\x27\x3f\x27", $queries[$q]["\161\x75\x65\162\x79"])); goto mnMYS; SwfV6: zGP5L: goto YioZb; ByqnQ: $updateData = ["\156\x69\153" => $request->nik, "\160\150\x6f\x6e\145" => $request->phone, "\x62\151\162\164\x68\144\141\171" => $request->birthday, "\147\145\156\144\145\162" => $request->gender, "\165\x70\144\x61\164\145\x64\137\141\x74" => Carbon::now("\101\163\x69\x61\x2f\x4a\141\153\141\x72\164\141")]; goto mcpCc; U7nZL: $queries = DB::getQueryLog(); goto igaET; YioZb: $attr = DB::table("\164\141\164\164\162\x5f\155\x65\x6d\x62\x65\162")->where("\151\144", $user->id)->where("\143\154\x69\x65\156\x74\x5f\x69\x64", $this->client_id)->update($updateData); goto ovb6j; mZLbW: DB::enableQueryLog(); goto L1ijf; NQRmb: } catch (\Exception $e) { goto YKSa9; b0vO5: \DB::rollBack(); goto ecKl_; ecKl_: return response()->json("\125\x70\x64\141\x74\145\40\160\162\x6f\146\151\154\x65\40\x66\x61\151\x6c\145\144\x21\x20\120\x6c\x65\x61\x73\x65\x20\x74\x72\x79\40\141\147\141\151\x6e\56", 500); goto UXDl5; YKSa9: $logs->write("\105\x52\x52\117\122", $e->getMessage()); goto b0vO5; UXDl5: } goto sJapU; WE8qm: swid0: goto ZIFTS; Iu212: Carbon::setLocale("\x69\144"); goto hyqy5; sJapU: } }
