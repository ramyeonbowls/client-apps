<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:14             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Repositories\Web; use App\Models\Web\WebMenu; use App\Models\Web\WebMenuAcl; use App\Models\Web\WebAccessLog; use Illuminate\Support\Facades\DB; class WebAccessLogRepository { public function get($filter = array()) { return WebAccessLog::sharedLock()->when(isset($filter["\x75\151\144"]), function ($query) use($filter) { $query->where("\x61\143\143\145\x73\163\x5f\x75\x69\x64", $filter["\x75\151\144"]); })->get(); } public function updateLeaveDate() { $max_accessid = WebAccessLog::where("\x6d\145\164\x68\x6f\144", "\107\x45\124")->where("\141\x63\x63\145\163\x73\137\x75\151\x64", auth()->user()->email)->max("\x69\x64"); return DB::transaction(function () use($max_accessid) { WebAccessLog::where("\151\144", $max_accessid)->update(["\154\x65\141\166\145\x5f\144\x61\164\x65" => now()->toDateTimeString()]); }); } public function createAccessLog($data) { return DB::transaction(function () use($data) { goto KOP9b; P5IyN: $accessLog->save(); goto VJ9qD; KOP9b: $menu = WebMenu::where("\x6d\x65\156\165\137\146\x6e", $data["\156\x61\155\145"])->first(); goto gZGcE; JCVlM: $accessLog->access_ip = $data["\141\x63\143\145\x73\x73\137\x69\x70"]; goto GtuMF; VJ9qD: return $accessLog->fresh(); goto QDbXF; gZGcE: $qstring = explode("\x3f", $data["\x66\x75\x6c\154\137\x75\x72\x6c"]); goto YJTeF; EKhPl: $accessLog->access_qstring = $qstring; goto JCVlM; UW0V6: $accessLog = new WebAccessLog(); goto PqUAW; UH88U: $accessLog->access_url = url($data["\x75\162\154"]); goto EKhPl; YJTeF: $qstring = count($qstring) < 2 ? "\x6d\x65\156\x75\137\146\156\75" . $data["\x6e\141\x6d\x65"] : (strpos($qstring[1], "\x6d\x65\x6e\165\x5f\146\156") === false ? "\x6d\145\156\165\137\x66\x6e\75" . $data["\156\x61\x6d\x65"] . "\46" . $qstring[1] : $qstring[1]); goto UW0V6; PqUAW: $accessLog->access_mid = $menu->id; goto UH88U; GtuMF: $accessLog->access_uid = auth()->user()->email; goto P5IyN; QDbXF: }); } public function getAclPermission($menuId) { goto r_0_Y; r_0_Y: $web_menu = WebMenu::select(["\x69\144", "\x6d\145\156\165\137\x66\156", "\x6d\x65\156\x75\137\154\141\x62\x65\x6c", "\x6d\x65\156\165\137\144\x65\163\143"])->where("\155\145\156\165\x5f\166\151\x73\x69\x62\154\x65", 1)->where("\x6d\x65\156\x75\137\146\156", $menuId)->whereIn("\x69\144", WebMenuAcl::sharedLock()->select("\155\x65\156\x75\x5f\x69\144")->where("\x75\163\x65\162\156\141\155\x65", auth()->user()->email)); goto SkVfd; vCtZk: tm9oV: goto GLWOp; GLWOp: return null; goto ZYTyx; SkVfd: if (!$web_menu->count()) { goto tm9oV; } goto S2n9o; vntFJ: return ["\x6d\145\x6e\x75\x5f\x66\156" => $web_menu->menu_fn, "\x6d\x65\x6e\x75\x5f\154\141\x62\x65\154" => $web_menu->menu_label, "\x6d\x65\156\165\137\144\x65\163\143" => $web_menu->menu_desc, "\x70\x65\162\155\x69\x73\163\x69\x6f\x6e" => ["\143\x72\x65\x61\164\x65" => (bool) $permission->create_permission, "\162\x65\x61\x64" => (bool) $permission->read_permission, "\165\160\x64\141\x74\x65" => (bool) $permission->update_permission, "\144\145\154\x65\x74\x65" => (bool) $permission->delete_permission]]; goto vCtZk; S2n9o: $web_menu = $web_menu->first(); goto R0buN; R0buN: $permission = WebMenuAcl::sharedLock()->where("\165\163\145\162\x6e\141\x6d\x65", auth()->user()->email)->where("\x6d\145\x6e\165\x5f\151\144", $web_menu->id)->first(); goto vntFJ; ZYTyx: } }
