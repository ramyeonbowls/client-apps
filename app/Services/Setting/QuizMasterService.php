<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-18 10:11:21             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Services\Setting; use App\Repositories\Setting\QuizMasterRepository; use Carbon\Carbon; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Query\Builder; use Illuminate\Support\Collection; class QuizMasterService { private QuizMasterRepository $Quiz_repo; protected $client_id = ''; public function __construct() { $this->Quiz_repo = new QuizMasterRepository(); $this->client_id = config("\141\160\x70\56\143\x6c\151\x65\x6e\164\x5f\151\144", ''); } public function get($email, array $filter = []) : Collection { return new Collection($this->Quiz_repo->get($filter, $this->client_id, $email)); } public function getQuestion($id) : Collection { return new Collection($this->Quiz_repo->getQuestion($id, $this->client_id)); } public function getAnswer($id, $question_id) : Collection { return new Collection($this->Quiz_repo->getAnswer($id, $question_id, $this->client_id)); } public function store(object $data) : bool { goto WtfwU; iLlBg: $data->create_by = $username; goto BCLwR; FcIrA: return $this->Quiz_repo->store($data, $this->client_id); goto irgN2; WtfwU: $datetime_now = Carbon::now("\101\163\151\x61\57\x4a\141\x6b\x61\162\164\x61"); goto PeHzb; BCLwR: $data->create_date = $datetime_now; goto FcIrA; PeHzb: $username = auth()->user()->email; goto iLlBg; irgN2: } public function update(object $data, string $id) : bool { goto b2sJ3; hrafr: $username = auth()->user()->email; goto mlFmg; b2sJ3: $datetime_now = Carbon::now("\x41\163\x69\x61\x2f\x4a\x61\x6b\x61\162\x74\141"); goto hrafr; NpFCC: return $this->Quiz_repo->update($data, $id, $this->client_id); goto plwI9; mlFmg: $data->modified_by = $username; goto fZJRw; fZJRw: $data->modified_date = $datetime_now; goto NpFCC; plwI9: } public function delete(string $id) { return $this->Quiz_repo->delete($id, $this->client_id); } }
