<?php
/*   __________________________________________________
    |  Obfuscated by Tarmun - Php Obfuscator  2.0.14  |
    |              on 2024-11-23 17:36:15             |
    |                                                 |
    |_________________________________________________|
*/
 namespace App\Services\Setting; use App\Repositories\Setting\QuizMasterRepository; use Carbon\Carbon; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Query\Builder; use Illuminate\Support\Collection; class QuizMasterService { private QuizMasterRepository $Quiz_repo; protected $client_id = ''; public function __construct() { $this->Quiz_repo = new QuizMasterRepository(); $this->client_id = config("\141\x70\x70\x2e\143\x6c\151\145\156\x74\137\x69\x64", ''); } public function get($email, array $filter = []) : Collection { return new Collection($this->Quiz_repo->get($filter, $this->client_id, $email)); } public function getQuestion($id) : Collection { return new Collection($this->Quiz_repo->getQuestion($id, $this->client_id)); } public function getAnswer($id, $question_id) : Collection { return new Collection($this->Quiz_repo->getAnswer($id, $question_id, $this->client_id)); } public function store(object $data) : bool { goto H9oMD; YoTNS: $username = auth()->user()->email; goto vgFGI; HO2LN: return $this->Quiz_repo->store($data, $this->client_id); goto wtlVY; vgFGI: $data->create_by = $username; goto Hqnjt; Hqnjt: $data->create_date = $datetime_now; goto HO2LN; H9oMD: $datetime_now = Carbon::now("\101\163\x69\141\x2f\112\x61\153\141\162\x74\x61"); goto YoTNS; wtlVY: } public function update(object $data, string $id) : bool { goto LhVdX; g84ty: return $this->Quiz_repo->update($data, $id, $this->client_id); goto l7s8n; Z8hjl: $username = auth()->user()->email; goto V4z5f; LhVdX: $datetime_now = Carbon::now("\101\163\151\141\57\112\x61\153\141\162\x74\141"); goto Z8hjl; O_bfy: $data->modified_date = $datetime_now; goto g84ty; V4z5f: $data->modified_by = $username; goto O_bfy; l7s8n: } public function delete(string $id) { return $this->Quiz_repo->delete($id, $this->client_id); } }
